

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct  4 20:56:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F874A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 17/08/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F874A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0007                     _PORTCbits	set	7
   170     000B                     _INTCONbits	set	11
   171     003B                     _RC3	set	59
   172     005A                     _T0IF	set	90
   173     0081                     _OPTION_REGbits	set	129
   174     0087                     _TRISC	set	135
   175                           
   176                           	psect	cinit
   177     000F                     start_initialization:	
   178                           ; #config settings
   179                           
   180     000F                     __initialization:
   181                           
   182                           ; Clear objects allocated to BANK0
   183     000F  1283               	bcf	3,5	;RP0=0, select bank0
   184     0010  1303               	bcf	3,6	;RP1=0, select bank0
   185     0011  01A0               	clrf	__pbssBANK0& (0+127)
   186     0012  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   187     0013  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   188     0014  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   189     0015                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     0015                     __end_of__initialization:
   193     0015  0183               	clrf	3
   194     0016  118A  2857         	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssBANK0
   197     0020                     __pbssBANK0:
   198     0020                     _cont:
   199     0020                     	ds	4
   200                           
   201                           	psect	cstackCOMMON
   202     0000                     __pcstackCOMMON:
   203     0000                     ??_main:
   204                           
   205                           	psect	cstackBANK0
   206     0024                     __pcstackBANK0:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0024                     ?_main:
   210     0024                     ?_myInterrupt:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0024                     ??_myInterrupt:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0024                     	ds	2
   219                           
   220                           	psect	maintext
   221     0057                     __pmaintext:	
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 24 in file "newmain.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0
   236 ;; Tracked objects:
   237 ;;		On entry : B00/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMMON   BANK0   BANK1
   241 ;;      Params:         0       0       0
   242 ;;      Locals:         0       0       0
   243 ;;      Temps:          0       0       0
   244 ;;      Totals:         0       0       0
   245 ;;Total ram usage:        0 bytes
   246 ;; Hardware stack levels required when called: 1
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254     0057                     _main:	
   255                           ;psect for function _main
   256                           
   257     0057                     l647:	
   258                           ;incstack = 0
   259                           ; Regs used in _main: [wreg+status,2+status,0]
   260                           
   261                           
   262                           ;newmain.c: 26:     TRISC = 0X00;
   263     0057  1683               	bsf	3,5	;RP0=1, select bank1
   264     0058  1303               	bcf	3,6	;RP1=0, select bank1
   265     0059  0187               	clrf	7	;volatile
   266     005A                     l649:
   267                           
   268                           ;newmain.c: 29:     OPTION_REGbits.T0CS = 0;
   269     005A  1281               	bcf	1,5	;volatile
   270     005B                     l651:
   271                           
   272                           ;newmain.c: 30:     OPTION_REGbits.PSA = 0;
   273     005B  1181               	bcf	1,3	;volatile
   274     005C                     l653:
   275                           
   276                           ;newmain.c: 31:     OPTION_REGbits.PS = 0b000;
   277     005C  30F8               	movlw	-8
   278     005D  0581               	andwf	1,f	;volatile
   279     005E                     l655:
   280                           
   281                           ;newmain.c: 34:     INTCONbits.GIE = 1;
   282     005E  178B               	bsf	11,7	;volatile
   283     005F                     l657:
   284                           
   285                           ;newmain.c: 35:     INTCONbits.T0IE = 1;
   286     005F  168B               	bsf	11,5	;volatile
   287     0060                     l19:	
   288                           ;newmain.c: 37:     while (1) {
   289                           
   290     0060                     l20:	
   291                           ;newmain.c: 38:     }
   292                           
   293     0060  2860               	goto	l19
   294     0061  118A  280D         	ljmp	start
   295     0063                     __end_of_main:
   296                           
   297                           	psect	text1
   298     0018                     __ptext1:	
   299 ;; *************** function _myInterrupt *****************
   300 ;; Defined at:
   301 ;;		line 42 in file "newmain.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1
   315 ;;      Params:         0       0       0
   316 ;;      Locals:         0       0       0
   317 ;;      Temps:          0       2       0
   318 ;;      Totals:         0       2       0
   319 ;;Total ram usage:        2 bytes
   320 ;; Hardware stack levels used: 1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		Interrupt level 1
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328     0018                     _myInterrupt:	
   329                           ;psect for function _myInterrupt
   330                           
   331     0018                     i1l659:
   332                           
   333                           ;newmain.c: 44:     if (T0IF) {
   334     0018  1D0B               	btfss	11,2	;volatile
   335     0019  281B               	goto	u4_21
   336     001A  281C               	goto	u4_20
   337     001B                     u4_21:
   338     001B  284E               	goto	i1l31
   339     001C                     u4_20:
   340     001C                     i1l661:
   341                           
   342                           ;newmain.c: 45:         cont++;
   343     001C  3001               	movlw	1
   344     001D  07A0               	addwf	_cont,f
   345     001E  3000               	movlw	0
   346     001F  1803               	skipnc
   347     0020  3001               	movlw	1
   348     0021  07A1               	addwf	_cont+1,f
   349     0022  3000               	movlw	0
   350     0023  1803               	skipnc
   351     0024  3001               	movlw	1
   352     0025  07A2               	addwf	_cont+2,f
   353     0026  3000               	movlw	0
   354     0027  1803               	skipnc
   355     0028  3001               	movlw	1
   356     0029  07A3               	addwf	_cont+3,f
   357     002A                     i1l663:
   358                           
   359                           ;newmain.c: 46:         if(cont >= 4000){
   360     002A  0823               	movf	_cont+3,w
   361     002B  1D03               	btfss	3,2
   362     002C  283C               	goto	u5_20
   363     002D  0822               	movf	_cont+2,w
   364     002E  1D03               	btfss	3,2
   365     002F  283C               	goto	u5_20
   366     0030  300F               	movlw	15
   367     0031  0221               	subwf	_cont+1,w
   368     0032  1D03               	skipz
   369     0033  2838               	goto	u5_23
   370     0034  30A0               	movlw	160
   371     0035  0220               	subwf	_cont,w
   372     0036  1D03               	skipz
   373     0037  2838               	goto	u5_23
   374     0038                     u5_23:
   375     0038  1C03               	btfss	3,0
   376     0039  283B               	goto	u5_21
   377     003A  283C               	goto	u5_20
   378     003B                     u5_21:
   379     003B  284D               	goto	i1l28
   380     003C                     u5_20:
   381     003C                     i1l665:
   382                           
   383                           ;newmain.c: 47:             cont = 0;
   384     003C  3000               	movlw	0
   385     003D  1283               	bcf	3,5	;RP0=0, select bank0
   386     003E  1303               	bcf	3,6	;RP1=0, select bank0
   387     003F  00A3               	movwf	_cont+3
   388     0040  3000               	movlw	0
   389     0041  00A2               	movwf	_cont+2
   390     0042  3000               	movlw	0
   391     0043  00A1               	movwf	_cont+1
   392     0044  3000               	movlw	0
   393     0045  00A0               	movwf	_cont
   394     0046                     i1l667:
   395                           
   396                           ;newmain.c: 48:             if(RC3 == 0){
   397     0046  1987               	btfsc	7,3	;volatile
   398     0047  2849               	goto	u6_21
   399     0048  284A               	goto	u6_20
   400     0049                     u6_21:
   401     0049  284C               	goto	i1l29
   402     004A                     u6_20:
   403     004A                     i1l669:
   404                           
   405                           ;newmain.c: 49:                 PORTCbits.RC3 = 1;
   406     004A  1587               	bsf	7,3	;volatile
   407                           
   408                           ;newmain.c: 50:             }
   409     004B  284D               	goto	i1l28
   410     004C                     i1l29:	
   411                           ;newmain.c: 51:             else {
   412                           
   413                           
   414                           ;newmain.c: 52:                 PORTCbits.RC3 = 0;
   415     004C  1187               	bcf	7,3	;volatile
   416     004D                     i1l28:	
   417                           ;newmain.c: 54:         }
   418                           
   419                           
   420                           ;newmain.c: 55:     T0IF = 0;
   421     004D  110B               	bcf	11,2	;volatile
   422     004E                     i1l31:
   423     004E  1283               	bcf	3,5	;RP0=0, select bank0
   424     004F  1303               	bcf	3,6	;RP1=0, select bank0
   425     0050  0825               	movf	??_myInterrupt+1,w
   426     0051  008A               	movwf	10
   427     0052  0E24               	swapf	??_myInterrupt,w
   428     0053  0083               	movwf	3
   429     0054  0EFE               	swapf	btemp,f
   430     0055  0E7E               	swapf	btemp,w
   431     0056  0009               	retfie
   432     0057                     __end_of_myInterrupt:
   433     007E                     btemp	set	126	;btemp
   434     007E                     wtemp0	set	126
   435                           
   436                           	psect	intentry
   437     0004                     __pintentry:	
   438                           ;incstack = 0
   439                           ; Regs used in _myInterrupt: [wreg+status,2+status,0]
   440                           
   441     0004                     interrupt_function:
   442     007E                     saved_w	set	btemp
   443     0004  00FE               	movwf	btemp
   444     0005  0E03               	swapf	3,w
   445     0006  1283               	bcf	3,5	;RP0=0, select bank0
   446     0007  1303               	bcf	3,6	;RP1=0, select bank0
   447     0008  00A4               	movwf	??_myInterrupt
   448     0009  080A               	movf	10,w
   449     000A  00A5               	movwf	??_myInterrupt+1
   450     000B  118A  2818         	ljmp	_myInterrupt
   451                           
   452                           	psect	idloc
   453                           
   454                           ;Config register IDLOC0 @ 0x2000
   455                           ;	unspecified, using default values
   456     2000                     	org	8192
   457     2000  3FFF               	dw	16383
   458                           
   459                           ;Config register IDLOC1 @ 0x2001
   460                           ;	unspecified, using default values
   461     2001                     	org	8193
   462     2001  3FFF               	dw	16383
   463                           
   464                           ;Config register IDLOC2 @ 0x2002
   465                           ;	unspecified, using default values
   466     2002                     	org	8194
   467     2002  3FFF               	dw	16383
   468                           
   469                           ;Config register IDLOC3 @ 0x2003
   470                           ;	unspecified, using default values
   471     2003                     	org	8195
   472     2003  3FFF               	dw	16383
   473                           
   474                           	psect	config
   475                           
   476                           ;Config register CONFIG @ 0x2007
   477                           ;	Oscillator Selection bits
   478                           ;	FOSC = HS, HS oscillator
   479                           ;	Watchdog Timer Enable bit
   480                           ;	WDTE = OFF, WDT disabled
   481                           ;	Power-up Timer Enable bit
   482                           ;	PWRTE = OFF, PWRT disabled
   483                           ;	Brown-out Reset Enable bit
   484                           ;	BOREN = OFF, BOR disabled
   485                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   486                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   487                           ;	Data EEPROM Memory Code Protection bit
   488                           ;	CPD = OFF, Data EEPROM code protection off
   489                           ;	Flash Program Memory Write Enable bits
   490                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   491                           ;	In-Circuit Debugger Mode bit
   492                           ;	DEBUG = 0x1, unprogrammed default
   493                           ;	Flash Program Memory Code Protection bit
   494                           ;	CP = OFF, Code protection off
   495     2007                     	org	8199
   496     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      2       6
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myInterrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInterrupt in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myInterrupt                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E      2       6       4        6.4%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       6       7        0.0%
DATA                 0      0       6       8        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct  4 20:56:28 2023

                     l20 0060                       l19 0060                      l651 005B  
                    l653 005C                      l655 005E                      l647 0057  
                    l657 005F                      l649 005A                      _RC3 003B  
                   _T0IF 005A                     i1l31 004E                     i1l28 004D  
                   i1l29 004C                     u4_20 001C                     u4_21 001B  
                   u5_20 003C                     u5_21 003B                     u5_23 0038  
                   u6_20 004A                     u6_21 0049                     _cont 0020  
                   _main 0057                     btemp 007E                     start 000D  
                  ?_main 0024                    i1l661 001C                    i1l663 002A  
                  i1l665 003C                    i1l667 0046                    i1l659 0018  
                  i1l669 004A                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E             ?_myInterrupt 0024  
        __initialization 000F             __end_of_main 0063                   ??_main 0000  
                 saved_w 007E  __end_of__initialization 0015           __pcstackCOMMON 0000  
         _OPTION_REGbits 0081               __pbssBANK0 0020               __pmaintext 0057  
             __pintentry 0004                  __ptext1 0018     end_of_initialization 0015  
              _PORTCbits 0007      start_initialization 000F                ___latbits 0001  
          __pcstackBANK0 0024            ??_myInterrupt 0024        interrupt_function 0004  
    __end_of_myInterrupt 0057              _myInterrupt 0018               _INTCONbits 000B  
               intlevel1 0000  



Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 01 22:03:11 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F874A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F874A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175     0008                     _PORTDbits	set	8
   176     0088                     _TRISD	set	136
   177                           
   178                           	psect	cinit
   179     07FD                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07FD                     __initialization:
   183     07FD                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FD                     __end_of__initialization:
   187     07FD  0183               	clrf	3
   188     07FE  118A  2F5D         	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0000                     __pcstackCOMMON:
   192     0000                     ??_ini_display:
   193     0000                     ??_limpa_disp:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0000                     ??_posdp:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0000                     ??_tempo_disp:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0000                     ??_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           	psect	cstackBANK0
   207     0020                     __pcstackBANK0:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0020                     ?_ini_display:
   211     0020                     ?_limpa_disp:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0020                     ?_escrevedp:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0020                     ?_tempo_disp:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0020                     ?_escrevedp_ini:	
   221                           ; 1 bytes @ 0x0
   222                           
   223     0020                     ?_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226     0020                     ?___awmod:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0020                     tempo_disp@tempo:	
   230                           ; 2 bytes @ 0x0
   231                           
   232     0020                     ___awmod@divisor:	
   233                           ; 2 bytes @ 0x0
   234                           
   235                           
   236                           ; 2 bytes @ 0x0
   237     0020                     	ds	2
   238     0022                     ??_escrevedp:
   239     0022                     ??_escrevedp_ini:	
   240                           ; 1 bytes @ 0x2
   241                           
   242     0022                     ___awmod@dividend:	
   243                           ; 1 bytes @ 0x2
   244                           
   245                           
   246                           ; 2 bytes @ 0x2
   247     0022                     	ds	2
   248     0024                     ??___awmod:
   249     0024                     escrevedp_ini@dado:	
   250                           ; 1 bytes @ 0x4
   251                           
   252     0024                     escrevedp@dado:	
   253                           ; 1 bytes @ 0x4
   254                           
   255                           
   256                           ; 1 bytes @ 0x4
   257     0024                     	ds	1
   258     0025                     ?_posdp:
   259     0025                     ___awmod@counter:	
   260                           ; 1 bytes @ 0x5
   261                           
   262     0025                     posdp@ValorP:	
   263                           ; 1 bytes @ 0x5
   264                           
   265                           
   266                           ; 2 bytes @ 0x5
   267     0025                     	ds	1
   268     0026                     ___awmod@sign:
   269                           
   270                           ; 1 bytes @ 0x6
   271     0026                     	ds	1
   272     0027                     ?___awdiv:
   273     0027                     ___awdiv@divisor:	
   274                           ; 2 bytes @ 0x7
   275                           
   276                           
   277                           ; 2 bytes @ 0x7
   278     0027                     	ds	2
   279     0029                     ___awdiv@dividend:
   280                           
   281                           ; 2 bytes @ 0x9
   282     0029                     	ds	2
   283     002B                     ??___awdiv:
   284                           
   285                           ; 1 bytes @ 0xB
   286     002B                     	ds	1
   287     002C                     ___awdiv@counter:
   288                           
   289                           ; 1 bytes @ 0xC
   290     002C                     	ds	1
   291     002D                     ___awdiv@sign:
   292                           
   293                           ; 1 bytes @ 0xD
   294     002D                     	ds	1
   295     002E                     ___awdiv@quotient:
   296                           
   297                           ; 2 bytes @ 0xE
   298     002E                     	ds	2
   299     0030                     main@unidade:
   300                           
   301                           ; 2 bytes @ 0x10
   302     0030                     	ds	2
   303     0032                     main@centena:
   304                           
   305                           ; 2 bytes @ 0x12
   306     0032                     	ds	2
   307     0034                     main@dezena:
   308                           
   309                           ; 2 bytes @ 0x14
   310     0034                     	ds	2
   311     0036                     main@tempo:
   312                           
   313                           ; 2 bytes @ 0x16
   314     0036                     	ds	2
   315     0038                     main@contador:
   316                           
   317                           ; 2 bytes @ 0x18
   318     0038                     	ds	2
   319                           
   320                           	psect	maintext
   321     075D                     __pmaintext:	
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 41 in file "newmain.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  contador        2   24[BANK0 ] int 
   332 ;;  tempo           2   22[BANK0 ] int 
   333 ;;  dezena          2   20[BANK0 ] int 
   334 ;;  centena         2   18[BANK0 ] int 
   335 ;;  unidade         2   16[BANK0 ] int 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, pclath, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : B00/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1
   345 ;;      Params:         0       0       0
   346 ;;      Locals:         0      10       0
   347 ;;      Temps:          0       0       0
   348 ;;      Totals:         0      10       0
   349 ;;Total ram usage:       10 bytes
   350 ;; Hardware stack levels required when called: 3
   351 ;; This function calls:
   352 ;;		___awdiv
   353 ;;		___awmod
   354 ;;		_escrevedp
   355 ;;		_ini_display
   356 ;;		_limpa_disp
   357 ;;		_posdp
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363     075D                     _main:	
   364                           ;psect for function _main
   365                           
   366     075D                     l1057:	
   367                           ;incstack = 0
   368                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   369                           
   370                           
   371                           ;newmain.c: 43:     int tempo;;newmain.c: 44:     int contador;;newmain.c: 45:     int u
      +                          nidade;;newmain.c: 46:     int centena;;newmain.c: 47:     int dezena;;newmain.c: 49:   
      +                            TRISD = 0x00;
   372     075D  1683               	bsf	3,5	;RP0=1, select bank1
   373     075E  1303               	bcf	3,6	;RP1=0, select bank1
   374     075F  0188               	clrf	8	;volatile
   375     0760                     l1059:
   376                           
   377                           ;newmain.c: 51:     ini_display();
   378     0760  118A  254B  118A   	fcall	_ini_display
   379     0763                     l1061:
   380                           
   381                           ;newmain.c: 52:  limpa_disp();
   382     0763  118A  2528  118A   	fcall	_limpa_disp
   383     0766                     l1063:
   384                           
   385                           ;newmain.c: 55:     {;newmain.c: 57:         if (tempo>0xFF70) {
   386     0766  30FF               	movlw	255
   387     0767  1283               	bcf	3,5	;RP0=0, select bank0
   388     0768  1303               	bcf	3,6	;RP1=0, select bank0
   389     0769  0237               	subwf	main@tempo+1,w
   390     076A  3071               	movlw	113
   391     076B  1903               	skipnz
   392     076C  0236               	subwf	main@tempo,w
   393     076D  1C03               	skipc
   394     076E  2F70               	goto	u661
   395     076F  2F71               	goto	u660
   396     0770                     u661:
   397     0770  2FE7               	goto	l1087
   398     0771                     u660:
   399     0771                     l1065:
   400                           
   401                           ;newmain.c: 58:             contador++;
   402     0771  3001               	movlw	1
   403     0772  07B8               	addwf	main@contador,f
   404     0773  1803               	skipnc
   405     0774  0AB9               	incf	main@contador+1,f
   406     0775  3000               	movlw	0
   407     0776  07B9               	addwf	main@contador+1,f
   408     0777                     l1067:
   409                           
   410                           ;newmain.c: 60:             centena = (contador / 100);
   411     0777  3064               	movlw	100
   412     0778  00A7               	movwf	___awdiv@divisor
   413     0779  3000               	movlw	0
   414     077A  00A8               	movwf	___awdiv@divisor+1
   415     077B  0839               	movf	main@contador+1,w
   416     077C  00AA               	movwf	___awdiv@dividend+1
   417     077D  0838               	movf	main@contador,w
   418     077E  00A9               	movwf	___awdiv@dividend
   419     077F  118A  25EF  118A   	fcall	___awdiv
   420     0782  1283               	bcf	3,5	;RP0=0, select bank0
   421     0783  1303               	bcf	3,6	;RP1=0, select bank0
   422     0784  0828               	movf	?___awdiv+1,w
   423     0785  00B3               	movwf	main@centena+1
   424     0786  0827               	movf	?___awdiv,w
   425     0787  00B2               	movwf	main@centena
   426     0788                     l1069:
   427                           
   428                           ;newmain.c: 61:             dezena = ((contador % 100) / 10);
   429     0788  300A               	movlw	10
   430     0789  00A7               	movwf	___awdiv@divisor
   431     078A  3000               	movlw	0
   432     078B  00A8               	movwf	___awdiv@divisor+1
   433     078C  0839               	movf	main@contador+1,w
   434     078D  00A3               	movwf	___awmod@dividend+1
   435     078E  0838               	movf	main@contador,w
   436     078F  00A2               	movwf	___awmod@dividend
   437     0790  3064               	movlw	100
   438     0791  00A0               	movwf	___awmod@divisor
   439     0792  3000               	movlw	0
   440     0793  00A1               	movwf	___awmod@divisor+1
   441     0794  118A  2594  118A   	fcall	___awmod
   442     0797  1283               	bcf	3,5	;RP0=0, select bank0
   443     0798  1303               	bcf	3,6	;RP1=0, select bank0
   444     0799  0821               	movf	?___awmod+1,w
   445     079A  00AA               	movwf	___awdiv@dividend+1
   446     079B  0820               	movf	?___awmod,w
   447     079C  00A9               	movwf	___awdiv@dividend
   448     079D  118A  25EF  118A   	fcall	___awdiv
   449     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   450     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   451     07A2  0828               	movf	?___awdiv+1,w
   452     07A3  00B5               	movwf	main@dezena+1
   453     07A4  0827               	movf	?___awdiv,w
   454     07A5  00B4               	movwf	main@dezena
   455     07A6                     l1071:
   456                           
   457                           ;newmain.c: 62:             unidade = ((contador % 10));
   458     07A6  300A               	movlw	10
   459     07A7  00A0               	movwf	___awmod@divisor
   460     07A8  3000               	movlw	0
   461     07A9  00A1               	movwf	___awmod@divisor+1
   462     07AA  0839               	movf	main@contador+1,w
   463     07AB  00A3               	movwf	___awmod@dividend+1
   464     07AC  0838               	movf	main@contador,w
   465     07AD  00A2               	movwf	___awmod@dividend
   466     07AE  118A  2594  118A   	fcall	___awmod
   467     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   468     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   469     07B3  0821               	movf	?___awmod+1,w
   470     07B4  00B1               	movwf	main@unidade+1
   471     07B5  0820               	movf	?___awmod,w
   472     07B6  00B0               	movwf	main@unidade
   473     07B7                     l1073:
   474                           
   475                           ;newmain.c: 64:             tempo=0;
   476     07B7  01B6               	clrf	main@tempo
   477     07B8  01B7               	clrf	main@tempo+1
   478     07B9                     l1075:
   479                           
   480                           ;newmain.c: 66:             posdp(0x80);
   481     07B9  3080               	movlw	128
   482     07BA  00A5               	movwf	posdp@ValorP
   483     07BB  3000               	movlw	0
   484     07BC  00A6               	movwf	posdp@ValorP+1
   485     07BD  118A  251D  118A   	fcall	_posdp
   486     07C0                     l1077:
   487                           
   488                           ;newmain.c: 67:             escrevedp(centena + '0');
   489     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   490     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   491     07C2  0832               	movf	main@centena,w
   492     07C3  3E30               	addlw	48
   493     07C4  118A  26CA  118A   	fcall	_escrevedp
   494     07C7                     l1079:
   495                           
   496                           ;newmain.c: 68:             posdp(0x81);
   497     07C7  3081               	movlw	129
   498     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   499     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   500     07CA  00A5               	movwf	posdp@ValorP
   501     07CB  3000               	movlw	0
   502     07CC  00A6               	movwf	posdp@ValorP+1
   503     07CD  118A  251D  118A   	fcall	_posdp
   504     07D0                     l1081:
   505                           
   506                           ;newmain.c: 69:             escrevedp(dezena + '0');
   507     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   508     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   509     07D2  0834               	movf	main@dezena,w
   510     07D3  3E30               	addlw	48
   511     07D4  118A  26CA  118A   	fcall	_escrevedp
   512     07D7                     l1083:
   513                           
   514                           ;newmain.c: 70:             posdp(0x82);
   515     07D7  3082               	movlw	130
   516     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   517     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   518     07DA  00A5               	movwf	posdp@ValorP
   519     07DB  3000               	movlw	0
   520     07DC  00A6               	movwf	posdp@ValorP+1
   521     07DD  118A  251D  118A   	fcall	_posdp
   522     07E0                     l1085:
   523                           
   524                           ;newmain.c: 71:             escrevedp(unidade + '0');
   525     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   526     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   527     07E2  0830               	movf	main@unidade,w
   528     07E3  3E30               	addlw	48
   529     07E4  118A  26CA  118A   	fcall	_escrevedp
   530     07E7                     l1087:
   531                           
   532                           ;newmain.c: 74:         if(contador==999) {
   533     07E7  30E7               	movlw	231
   534     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   535     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   536     07EA  0638               	xorwf	main@contador,w
   537     07EB  3003               	movlw	3
   538     07EC  1903               	skipnz
   539     07ED  0639               	xorwf	main@contador+1,w
   540     07EE  1D03               	btfss	3,2
   541     07EF  2FF1               	goto	u671
   542     07F0  2FF2               	goto	u670
   543     07F1                     u671:
   544     07F1  2FF4               	goto	l1091
   545     07F2                     u670:
   546     07F2                     l1089:
   547                           
   548                           ;newmain.c: 75:             contador=0;
   549     07F2  01B8               	clrf	main@contador
   550     07F3  01B9               	clrf	main@contador+1
   551     07F4                     l1091:
   552                           
   553                           ;newmain.c: 77:         tempo++;
   554     07F4  3001               	movlw	1
   555     07F5  07B6               	addwf	main@tempo,f
   556     07F6  1803               	skipnc
   557     07F7  0AB7               	incf	main@tempo+1,f
   558     07F8  3000               	movlw	0
   559     07F9  07B7               	addwf	main@tempo+1,f
   560                           
   561                           ;newmain.c: 78:     } while(1);
   562     07FA  2F66               	goto	l1063
   563     07FB  118A  2800         	ljmp	start
   564     07FD                     __end_of_main:
   565                           
   566                           	psect	text1
   567     051D                     __ptext1:	
   568 ;; *************** function _posdp *****************
   569 ;; Defined at:
   570 ;;		line 172 in file "newmain.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  ValorP          2    5[BANK0 ] int 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, status,2, status,0, pclath, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1
   584 ;;      Params:         0       2       0
   585 ;;      Locals:         0       0       0
   586 ;;      Temps:          0       0       0
   587 ;;      Totals:         0       2       0
   588 ;;Total ram usage:        2 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; Hardware stack levels required when called: 2
   591 ;; This function calls:
   592 ;;		_escrevedp
   593 ;; This function is called by:
   594 ;;		_main
   595 ;;		_display
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599     051D                     _posdp:	
   600                           ;psect for function _posdp
   601                           
   602     051D                     l969:	
   603                           ;incstack = 0
   604                           ; Regs used in _posdp: [wreg+status,2+status,0+pclath+cstack]
   605                           
   606                           
   607                           ;newmain.c: 172: void posdp(int ValorP);newmain.c: 173: {;newmain.c: 174:  PORTDbits.RD2
      +                           = 0;
   608     051D  1283               	bcf	3,5	;RP0=0, select bank0
   609     051E  1303               	bcf	3,6	;RP1=0, select bank0
   610     051F  1108               	bcf	8,2	;volatile
   611     0520                     l971:
   612                           
   613                           ;newmain.c: 175:  escrevedp(ValorP);
   614     0520  0825               	movf	posdp@ValorP,w
   615     0521  118A  26CA  118A   	fcall	_escrevedp
   616     0524                     l973:
   617                           
   618                           ;newmain.c: 176:  PORTDbits.RD2 = 1;
   619     0524  1283               	bcf	3,5	;RP0=0, select bank0
   620     0525  1303               	bcf	3,6	;RP1=0, select bank0
   621     0526  1508               	bsf	8,2	;volatile
   622     0527                     l43:
   623     0527  0008               	return
   624     0528                     __end_of_posdp:
   625                           
   626                           	psect	text2
   627     06CA                     __ptext2:	
   628 ;; *************** function _escrevedp *****************
   629 ;; Defined at:
   630 ;;		line 152 in file "newmain.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  dado            1    wreg     unsigned char 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  dado            1    4[BANK0 ] unsigned char 
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1
   644 ;;      Params:         0       0       0
   645 ;;      Locals:         0       1       0
   646 ;;      Temps:          0       2       0
   647 ;;      Totals:         0       3       0
   648 ;;Total ram usage:        3 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 1
   651 ;; This function calls:
   652 ;;		_tempo_disp
   653 ;; This function is called by:
   654 ;;		_main
   655 ;;		_posdp
   656 ;;		_display
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660     06CA                     _escrevedp:	
   661                           ;psect for function _escrevedp
   662                           
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in _escrevedp: [wreg+status,2+status,0+pclath+cstack]
   666                           ;escrevedp@dado stored from wreg
   667     06CA  1283               	bcf	3,5	;RP0=0, select bank0
   668     06CB  1303               	bcf	3,6	;RP1=0, select bank0
   669     06CC  00A4               	movwf	escrevedp@dado
   670     06CD                     l899:
   671                           
   672                           ;newmain.c: 152: void escrevedp(char dado);newmain.c: 153: {;newmain.c: 154:     PORTDbi
      +                          ts.RD7 = (dado&0x80)>>7;
   673     06CD  0824               	movf	escrevedp@dado,w
   674     06CE  00A2               	movwf	??_escrevedp
   675     06CF  3007               	movlw	7
   676     06D0                     u395:
   677     06D0  1003               	clrc
   678     06D1  0CA2               	rrf	??_escrevedp,f
   679     06D2  3EFF               	addlw	-1
   680     06D3  1D03               	skipz
   681     06D4  2ED0               	goto	u395
   682     06D5  0822               	movf	??_escrevedp,w
   683     06D6  3901               	andlw	1
   684     06D7  00A3               	movwf	??_escrevedp+1
   685     06D8  0CA3               	rrf	??_escrevedp+1,f
   686     06D9  0CA3               	rrf	??_escrevedp+1,f
   687     06DA  0808               	movf	8,w	;volatile
   688     06DB  0623               	xorwf	??_escrevedp+1,w
   689     06DC  397F               	andlw	-129
   690     06DD  0623               	xorwf	??_escrevedp+1,w
   691     06DE  0088               	movwf	8	;volatile
   692                           
   693                           ;newmain.c: 155:     PORTDbits.RD6 = (dado&0x40)>>6;
   694     06DF  0824               	movf	escrevedp@dado,w
   695     06E0  00A2               	movwf	??_escrevedp
   696     06E1  3006               	movlw	6
   697     06E2                     u405:
   698     06E2  1003               	clrc
   699     06E3  0CA2               	rrf	??_escrevedp,f
   700     06E4  3EFF               	addlw	-1
   701     06E5  1D03               	skipz
   702     06E6  2EE2               	goto	u405
   703     06E7  0822               	movf	??_escrevedp,w
   704     06E8  3901               	andlw	1
   705     06E9  00A3               	movwf	??_escrevedp+1
   706     06EA  0EA3               	swapf	??_escrevedp+1,f
   707     06EB  0DA3               	rlf	??_escrevedp+1,f
   708     06EC  0DA3               	rlf	??_escrevedp+1,f
   709     06ED  0808               	movf	8,w	;volatile
   710     06EE  0623               	xorwf	??_escrevedp+1,w
   711     06EF  39BF               	andlw	-65
   712     06F0  0623               	xorwf	??_escrevedp+1,w
   713     06F1  0088               	movwf	8	;volatile
   714                           
   715                           ;newmain.c: 156:     PORTDbits.RD5 = (dado&0x20)>>5;
   716     06F2  0824               	movf	escrevedp@dado,w
   717     06F3  00A2               	movwf	??_escrevedp
   718     06F4  3005               	movlw	5
   719     06F5                     u415:
   720     06F5  1003               	clrc
   721     06F6  0CA2               	rrf	??_escrevedp,f
   722     06F7  3EFF               	addlw	-1
   723     06F8  1D03               	skipz
   724     06F9  2EF5               	goto	u415
   725     06FA  0822               	movf	??_escrevedp,w
   726     06FB  3901               	andlw	1
   727     06FC  00A3               	movwf	??_escrevedp+1
   728     06FD  0EA3               	swapf	??_escrevedp+1,f
   729     06FE  0DA3               	rlf	??_escrevedp+1,f
   730     06FF  0808               	movf	8,w	;volatile
   731     0700  0623               	xorwf	??_escrevedp+1,w
   732     0701  39DF               	andlw	-33
   733     0702  0623               	xorwf	??_escrevedp+1,w
   734     0703  0088               	movwf	8	;volatile
   735                           
   736                           ;newmain.c: 157:     PORTDbits.RD4 = (dado&0x10)>>4;
   737     0704  0824               	movf	escrevedp@dado,w
   738     0705  00A2               	movwf	??_escrevedp
   739     0706  3004               	movlw	4
   740     0707                     u425:
   741     0707  1003               	clrc
   742     0708  0CA2               	rrf	??_escrevedp,f
   743     0709  3EFF               	addlw	-1
   744     070A  1D03               	skipz
   745     070B  2F07               	goto	u425
   746     070C  0822               	movf	??_escrevedp,w
   747     070D  3901               	andlw	1
   748     070E  00A3               	movwf	??_escrevedp+1
   749     070F  0EA3               	swapf	??_escrevedp+1,f
   750     0710  0808               	movf	8,w	;volatile
   751     0711  0623               	xorwf	??_escrevedp+1,w
   752     0712  39EF               	andlw	-17
   753     0713  0623               	xorwf	??_escrevedp+1,w
   754     0714  0088               	movwf	8	;volatile
   755     0715                     l901:
   756                           
   757                           ;newmain.c: 158:     PORTDbits.RD3 =1;
   758     0715  1588               	bsf	8,3	;volatile
   759     0716                     l903:
   760                           
   761                           ;newmain.c: 159:     PORTDbits.RD3 =0;
   762     0716  1188               	bcf	8,3	;volatile
   763     0717                     l905:
   764                           
   765                           ;newmain.c: 161:  tempo_disp();
   766     0717  118A  2537  118A   	fcall	_tempo_disp
   767     071A                     l907:
   768                           
   769                           ;newmain.c: 163:     PORTDbits.RD7 = (dado&0x8)>>3;
   770     071A  1283               	bcf	3,5	;RP0=0, select bank0
   771     071B  1303               	bcf	3,6	;RP1=0, select bank0
   772     071C  0824               	movf	escrevedp@dado,w
   773     071D  00A2               	movwf	??_escrevedp
   774     071E  3003               	movlw	3
   775     071F                     u435:
   776     071F  1003               	clrc
   777     0720  0CA2               	rrf	??_escrevedp,f
   778     0721  3EFF               	addlw	-1
   779     0722  1D03               	skipz
   780     0723  2F1F               	goto	u435
   781     0724  0822               	movf	??_escrevedp,w
   782     0725  3901               	andlw	1
   783     0726  00A3               	movwf	??_escrevedp+1
   784     0727  0CA3               	rrf	??_escrevedp+1,f
   785     0728  0CA3               	rrf	??_escrevedp+1,f
   786     0729  0808               	movf	8,w	;volatile
   787     072A  0623               	xorwf	??_escrevedp+1,w
   788     072B  397F               	andlw	-129
   789     072C  0623               	xorwf	??_escrevedp+1,w
   790     072D  0088               	movwf	8	;volatile
   791     072E                     l909:
   792                           
   793                           ;newmain.c: 164:     PORTDbits.RD6 = (dado&0x4)>>2;
   794     072E  0824               	movf	escrevedp@dado,w
   795     072F  00A2               	movwf	??_escrevedp
   796     0730  3002               	movlw	2
   797     0731                     u445:
   798     0731  1003               	clrc
   799     0732  0CA2               	rrf	??_escrevedp,f
   800     0733  3EFF               	addlw	-1
   801     0734  1D03               	skipz
   802     0735  2F31               	goto	u445
   803     0736  0822               	movf	??_escrevedp,w
   804     0737  3901               	andlw	1
   805     0738  00A3               	movwf	??_escrevedp+1
   806     0739  0EA3               	swapf	??_escrevedp+1,f
   807     073A  0DA3               	rlf	??_escrevedp+1,f
   808     073B  0DA3               	rlf	??_escrevedp+1,f
   809     073C  0808               	movf	8,w	;volatile
   810     073D  0623               	xorwf	??_escrevedp+1,w
   811     073E  39BF               	andlw	-65
   812     073F  0623               	xorwf	??_escrevedp+1,w
   813     0740  0088               	movwf	8	;volatile
   814     0741                     l911:
   815                           
   816                           ;newmain.c: 165:     PORTDbits.RD5 = (dado&0x2)>>1;
   817     0741  0824               	movf	escrevedp@dado,w
   818     0742  00A2               	movwf	??_escrevedp
   819     0743  1003               	clrc
   820     0744  0C22               	rrf	??_escrevedp,w
   821     0745  3901               	andlw	1
   822     0746  00A3               	movwf	??_escrevedp+1
   823     0747  0EA3               	swapf	??_escrevedp+1,f
   824     0748  0DA3               	rlf	??_escrevedp+1,f
   825     0749  0808               	movf	8,w	;volatile
   826     074A  0623               	xorwf	??_escrevedp+1,w
   827     074B  39DF               	andlw	-33
   828     074C  0623               	xorwf	??_escrevedp+1,w
   829     074D  0088               	movwf	8	;volatile
   830     074E                     l913:
   831                           
   832                           ;newmain.c: 166:     PORTDbits.RD4 = (dado&0x1);
   833     074E  0824               	movf	escrevedp@dado,w
   834     074F  3901               	andlw	1
   835     0750  00A2               	movwf	??_escrevedp
   836     0751  0EA2               	swapf	??_escrevedp,f
   837     0752  0808               	movf	8,w	;volatile
   838     0753  0622               	xorwf	??_escrevedp,w
   839     0754  39EF               	andlw	-17
   840     0755  0622               	xorwf	??_escrevedp,w
   841     0756  0088               	movwf	8	;volatile
   842     0757                     l915:
   843                           
   844                           ;newmain.c: 167:     PORTDbits.RD3 = 1;
   845     0757  1588               	bsf	8,3	;volatile
   846     0758                     l917:
   847                           
   848                           ;newmain.c: 168:     PORTDbits.RD3 = 0;
   849     0758  1188               	bcf	8,3	;volatile
   850     0759                     l919:
   851                           
   852                           ;newmain.c: 169:  tempo_disp();
   853     0759  118A  2537  118A   	fcall	_tempo_disp
   854     075C                     l40:
   855     075C  0008               	return
   856     075D                     __end_of_escrevedp:
   857                           
   858                           	psect	text3
   859     0528                     __ptext3:	
   860 ;; *************** function _limpa_disp *****************
   861 ;; Defined at:
   862 ;;		line 179 in file "newmain.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, pclath, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1
   876 ;;      Params:         0       0       0
   877 ;;      Locals:         0       0       0
   878 ;;      Temps:          0       0       0
   879 ;;      Totals:         0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 2
   883 ;; This function calls:
   884 ;;		_escrevedp_ini
   885 ;; This function is called by:
   886 ;;		_main
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890     0528                     _limpa_disp:	
   891                           ;psect for function _limpa_disp
   892                           
   893     0528                     l963:	
   894                           ;incstack = 0
   895                           ; Regs used in _limpa_disp: [wreg+status,2+status,0+pclath+cstack]
   896                           
   897                           
   898                           ;newmain.c: 181:  PORTDbits.RD2 = 0;
   899     0528  1283               	bcf	3,5	;RP0=0, select bank0
   900     0529  1303               	bcf	3,6	;RP1=0, select bank0
   901     052A  1108               	bcf	8,2	;volatile
   902     052B                     l965:
   903                           
   904                           ;newmain.c: 182:  escrevedp_ini(0x0);
   905     052B  3000               	movlw	0
   906     052C  118A  2658  118A   	fcall	_escrevedp_ini
   907                           
   908                           ;newmain.c: 183:  escrevedp_ini(0x1);
   909     052F  3001               	movlw	1
   910     0530  118A  2658  118A   	fcall	_escrevedp_ini
   911     0533                     l967:
   912                           
   913                           ;newmain.c: 184:  PORTDbits.RD2 = 1;
   914     0533  1283               	bcf	3,5	;RP0=0, select bank0
   915     0534  1303               	bcf	3,6	;RP1=0, select bank0
   916     0535  1508               	bsf	8,2	;volatile
   917     0536                     l46:
   918     0536  0008               	return
   919     0537                     __end_of_limpa_disp:
   920                           
   921                           	psect	text4
   922     054B                     __ptext4:	
   923 ;; *************** function _ini_display *****************
   924 ;; Defined at:
   925 ;;		line 82 in file "newmain.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1
   939 ;;      Params:         0       0       0
   940 ;;      Locals:         0       0       0
   941 ;;      Temps:          0       0       0
   942 ;;      Totals:         0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 2
   946 ;; This function calls:
   947 ;;		_escrevedp_ini
   948 ;;		_tempo_disp
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954     054B                     _ini_display:	
   955                           ;psect for function _ini_display
   956                           
   957     054B                     l957:	
   958                           ;incstack = 0
   959                           ; Regs used in _ini_display: [wreg+status,2+status,0+pclath+cstack]
   960                           
   961                           
   962                           ;newmain.c: 84:  PORTDbits.RD1 = 0;
   963     054B  1283               	bcf	3,5	;RP0=0, select bank0
   964     054C  1303               	bcf	3,6	;RP1=0, select bank0
   965     054D  1088               	bcf	8,1	;volatile
   966                           
   967                           ;newmain.c: 85:  PORTDbits.RD2 = 0;
   968     054E  1108               	bcf	8,2	;volatile
   969                           
   970                           ;newmain.c: 87:     PORTDbits.RD3 = 0;
   971     054F  1188               	bcf	8,3	;volatile
   972                           
   973                           ;newmain.c: 88:     PORTDbits.RD4 = 0;
   974     0550  1208               	bcf	8,4	;volatile
   975                           
   976                           ;newmain.c: 89:     PORTDbits.RD5 = 0;
   977     0551  1288               	bcf	8,5	;volatile
   978                           
   979                           ;newmain.c: 90:     PORTDbits.RD6 = 0;
   980     0552  1308               	bcf	8,6	;volatile
   981                           
   982                           ;newmain.c: 91:     PORTDbits.RD7 = 0;
   983     0553  1388               	bcf	8,7	;volatile
   984     0554                     l959:
   985                           
   986                           ;newmain.c: 93:  tempo_disp();
   987     0554  118A  2537  118A   	fcall	_tempo_disp
   988                           
   989                           ;newmain.c: 94:  tempo_disp();
   990     0557  118A  2537  118A   	fcall	_tempo_disp
   991                           
   992                           ;newmain.c: 95:  tempo_disp();
   993     055A  118A  2537  118A   	fcall	_tempo_disp
   994                           
   995                           ;newmain.c: 96:  tempo_disp();
   996     055D  118A  2537  118A   	fcall	_tempo_disp
   997                           
   998                           ;newmain.c: 98:     escrevedp_ini(0x3);
   999     0560  3003               	movlw	3
  1000     0561  118A  2658  118A   	fcall	_escrevedp_ini
  1001                           
  1002                           ;newmain.c: 99:     escrevedp_ini(0x3);
  1003     0564  3003               	movlw	3
  1004     0565  118A  2658  118A   	fcall	_escrevedp_ini
  1005                           
  1006                           ;newmain.c: 100:  escrevedp_ini(0x3);
  1007     0568  3003               	movlw	3
  1008     0569  118A  2658  118A   	fcall	_escrevedp_ini
  1009                           
  1010                           ;newmain.c: 101:  escrevedp_ini(0x2);
  1011     056C  3002               	movlw	2
  1012     056D  118A  2658  118A   	fcall	_escrevedp_ini
  1013                           
  1014                           ;newmain.c: 102:  escrevedp_ini(0x2);
  1015     0570  3002               	movlw	2
  1016     0571  118A  2658  118A   	fcall	_escrevedp_ini
  1017                           
  1018                           ;newmain.c: 103:  escrevedp_ini(0x8);
  1019     0574  3008               	movlw	8
  1020     0575  118A  2658  118A   	fcall	_escrevedp_ini
  1021                           
  1022                           ;newmain.c: 104:  escrevedp_ini(0x0);
  1023     0578  3000               	movlw	0
  1024     0579  118A  2658  118A   	fcall	_escrevedp_ini
  1025                           
  1026                           ;newmain.c: 105:  escrevedp_ini(0xC);
  1027     057C  300C               	movlw	12
  1028     057D  118A  2658  118A   	fcall	_escrevedp_ini
  1029                           
  1030                           ;newmain.c: 106:  escrevedp_ini(0x0);
  1031     0580  3000               	movlw	0
  1032     0581  118A  2658  118A   	fcall	_escrevedp_ini
  1033                           
  1034                           ;newmain.c: 107:  escrevedp_ini(0x1);
  1035     0584  3001               	movlw	1
  1036     0585  118A  2658  118A   	fcall	_escrevedp_ini
  1037                           
  1038                           ;newmain.c: 108:  escrevedp_ini(0x0);
  1039     0588  3000               	movlw	0
  1040     0589  118A  2658  118A   	fcall	_escrevedp_ini
  1041                           
  1042                           ;newmain.c: 109:  escrevedp_ini(0x6);
  1043     058C  3006               	movlw	6
  1044     058D  118A  2658  118A   	fcall	_escrevedp_ini
  1045     0590                     l961:
  1046                           
  1047                           ;newmain.c: 111:  PORTDbits.RD2 = 1;
  1048     0590  1283               	bcf	3,5	;RP0=0, select bank0
  1049     0591  1303               	bcf	3,6	;RP1=0, select bank0
  1050     0592  1508               	bsf	8,2	;volatile
  1051     0593                     l28:
  1052     0593  0008               	return
  1053     0594                     __end_of_ini_display:
  1054                           
  1055                           	psect	text5
  1056     0658                     __ptext5:	
  1057 ;; *************** function _escrevedp_ini *****************
  1058 ;; Defined at:
  1059 ;;		line 121 in file "newmain.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  dado            1    wreg     unsigned char 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  dado            1    4[BANK0 ] unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0, pclath, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1
  1073 ;;      Params:         0       0       0
  1074 ;;      Locals:         0       1       0
  1075 ;;      Temps:          0       2       0
  1076 ;;      Totals:         0       3       0
  1077 ;;Total ram usage:        3 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 1
  1080 ;; This function calls:
  1081 ;;		_tempo_disp
  1082 ;; This function is called by:
  1083 ;;		_ini_display
  1084 ;;		_limpa_disp
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088     0658                     _escrevedp_ini:	
  1089                           ;psect for function _escrevedp_ini
  1090                           
  1091                           
  1092                           ;incstack = 0
  1093                           ; Regs used in _escrevedp_ini: [wreg+status,2+status,0+pclath+cstack]
  1094                           ;escrevedp_ini@dado stored from wreg
  1095     0658  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0659  1303               	bcf	3,6	;RP1=0, select bank0
  1097     065A  00A4               	movwf	escrevedp_ini@dado
  1098     065B                     l921:
  1099                           
  1100                           ;newmain.c: 121: void escrevedp_ini(char dado);newmain.c: 122: {;newmain.c: 123:     POR
      +                          TDbits.RD7 = (dado&0x8)>>3;
  1101     065B  0824               	movf	escrevedp_ini@dado,w
  1102     065C  00A2               	movwf	??_escrevedp_ini
  1103     065D  3003               	movlw	3
  1104     065E                     u455:
  1105     065E  1003               	clrc
  1106     065F  0CA2               	rrf	??_escrevedp_ini,f
  1107     0660  3EFF               	addlw	-1
  1108     0661  1D03               	skipz
  1109     0662  2E5E               	goto	u455
  1110     0663  0822               	movf	??_escrevedp_ini,w
  1111     0664  3901               	andlw	1
  1112     0665  00A3               	movwf	??_escrevedp_ini+1
  1113     0666  0CA3               	rrf	??_escrevedp_ini+1,f
  1114     0667  0CA3               	rrf	??_escrevedp_ini+1,f
  1115     0668  0808               	movf	8,w	;volatile
  1116     0669  0623               	xorwf	??_escrevedp_ini+1,w
  1117     066A  397F               	andlw	-129
  1118     066B  0623               	xorwf	??_escrevedp_ini+1,w
  1119     066C  0088               	movwf	8	;volatile
  1120                           
  1121                           ;newmain.c: 124:     PORTDbits.RD6 = (dado&0x4)>>2;
  1122     066D  0824               	movf	escrevedp_ini@dado,w
  1123     066E  00A2               	movwf	??_escrevedp_ini
  1124     066F  3002               	movlw	2
  1125     0670                     u465:
  1126     0670  1003               	clrc
  1127     0671  0CA2               	rrf	??_escrevedp_ini,f
  1128     0672  3EFF               	addlw	-1
  1129     0673  1D03               	skipz
  1130     0674  2E70               	goto	u465
  1131     0675  0822               	movf	??_escrevedp_ini,w
  1132     0676  3901               	andlw	1
  1133     0677  00A3               	movwf	??_escrevedp_ini+1
  1134     0678  0EA3               	swapf	??_escrevedp_ini+1,f
  1135     0679  0DA3               	rlf	??_escrevedp_ini+1,f
  1136     067A  0DA3               	rlf	??_escrevedp_ini+1,f
  1137     067B  0808               	movf	8,w	;volatile
  1138     067C  0623               	xorwf	??_escrevedp_ini+1,w
  1139     067D  39BF               	andlw	-65
  1140     067E  0623               	xorwf	??_escrevedp_ini+1,w
  1141     067F  0088               	movwf	8	;volatile
  1142                           
  1143                           ;newmain.c: 125:     PORTDbits.RD5 = (dado&0x2)>>1;
  1144     0680  0824               	movf	escrevedp_ini@dado,w
  1145     0681  00A2               	movwf	??_escrevedp_ini
  1146     0682  1003               	clrc
  1147     0683  0C22               	rrf	??_escrevedp_ini,w
  1148     0684  3901               	andlw	1
  1149     0685  00A3               	movwf	??_escrevedp_ini+1
  1150     0686  0EA3               	swapf	??_escrevedp_ini+1,f
  1151     0687  0DA3               	rlf	??_escrevedp_ini+1,f
  1152     0688  0808               	movf	8,w	;volatile
  1153     0689  0623               	xorwf	??_escrevedp_ini+1,w
  1154     068A  39DF               	andlw	-33
  1155     068B  0623               	xorwf	??_escrevedp_ini+1,w
  1156     068C  0088               	movwf	8	;volatile
  1157                           
  1158                           ;newmain.c: 126:     PORTDbits.RD4 = (dado&0x1);
  1159     068D  0824               	movf	escrevedp_ini@dado,w
  1160     068E  3901               	andlw	1
  1161     068F  00A2               	movwf	??_escrevedp_ini
  1162     0690  0EA2               	swapf	??_escrevedp_ini,f
  1163     0691  0808               	movf	8,w	;volatile
  1164     0692  0622               	xorwf	??_escrevedp_ini,w
  1165     0693  39EF               	andlw	-17
  1166     0694  0622               	xorwf	??_escrevedp_ini,w
  1167     0695  0088               	movwf	8	;volatile
  1168     0696                     l923:
  1169                           
  1170                           ;newmain.c: 128:  tempo_disp();
  1171     0696  118A  2537  118A   	fcall	_tempo_disp
  1172     0699                     l925:
  1173                           
  1174                           ;newmain.c: 129:  tempo_disp();
  1175     0699  118A  2537  118A   	fcall	_tempo_disp
  1176     069C                     l927:
  1177                           
  1178                           ;newmain.c: 130:  tempo_disp();
  1179     069C  118A  2537  118A   	fcall	_tempo_disp
  1180     069F                     l929:
  1181                           
  1182                           ;newmain.c: 131:  tempo_disp();
  1183     069F  118A  2537  118A   	fcall	_tempo_disp
  1184     06A2                     l931:
  1185                           
  1186                           ;newmain.c: 132:  tempo_disp();
  1187     06A2  118A  2537  118A   	fcall	_tempo_disp
  1188     06A5                     l933:
  1189                           
  1190                           ;newmain.c: 134:     PORTDbits.RD3=1;
  1191     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1192     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1193     06A7  1588               	bsf	8,3	;volatile
  1194     06A8                     l935:
  1195                           
  1196                           ;newmain.c: 136:  tempo_disp();
  1197     06A8  118A  2537  118A   	fcall	_tempo_disp
  1198     06AB                     l937:
  1199                           
  1200                           ;newmain.c: 137:  tempo_disp();
  1201     06AB  118A  2537  118A   	fcall	_tempo_disp
  1202     06AE                     l939:
  1203                           
  1204                           ;newmain.c: 138:  tempo_disp();
  1205     06AE  118A  2537  118A   	fcall	_tempo_disp
  1206     06B1                     l941:
  1207                           
  1208                           ;newmain.c: 139:  tempo_disp();
  1209     06B1  118A  2537  118A   	fcall	_tempo_disp
  1210     06B4                     l943:
  1211                           
  1212                           ;newmain.c: 140:  tempo_disp();
  1213     06B4  118A  2537  118A   	fcall	_tempo_disp
  1214     06B7                     l945:
  1215                           
  1216                           ;newmain.c: 142:     PORTDbits.RD3 =0;
  1217     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1218     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1219     06B9  1188               	bcf	8,3	;volatile
  1220     06BA                     l947:
  1221                           
  1222                           ;newmain.c: 144:  tempo_disp();
  1223     06BA  118A  2537  118A   	fcall	_tempo_disp
  1224     06BD                     l949:
  1225                           
  1226                           ;newmain.c: 145:  tempo_disp();
  1227     06BD  118A  2537  118A   	fcall	_tempo_disp
  1228     06C0                     l951:
  1229                           
  1230                           ;newmain.c: 146:  tempo_disp();
  1231     06C0  118A  2537  118A   	fcall	_tempo_disp
  1232     06C3                     l953:
  1233                           
  1234                           ;newmain.c: 147:  tempo_disp();
  1235     06C3  118A  2537  118A   	fcall	_tempo_disp
  1236     06C6                     l955:
  1237                           
  1238                           ;newmain.c: 148:  tempo_disp();
  1239     06C6  118A  2537  118A   	fcall	_tempo_disp
  1240     06C9                     l37:
  1241     06C9  0008               	return
  1242     06CA                     __end_of_escrevedp_ini:
  1243                           
  1244                           	psect	text6
  1245     0537                     __ptext6:	
  1246 ;; *************** function _tempo_disp *****************
  1247 ;; Defined at:
  1248 ;;		line 114 in file "newmain.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  tempo           2    0[BANK0 ] unsigned int 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1
  1262 ;;      Params:         0       0       0
  1263 ;;      Locals:         0       2       0
  1264 ;;      Temps:          0       0       0
  1265 ;;      Totals:         0       2       0
  1266 ;;Total ram usage:        2 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_ini_display
  1272 ;;		_escrevedp_ini
  1273 ;;		_escrevedp
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277     0537                     _tempo_disp:	
  1278                           ;psect for function _tempo_disp
  1279                           
  1280     0537                     l891:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _tempo_disp: [wreg+status,2]
  1283                           
  1284                           
  1285                           ;newmain.c: 116:  unsigned int tempo;;newmain.c: 117:  for(tempo = 0 ; tempo<0xFFF ;temp
      +                          o++)
  1286     0537  1283               	bcf	3,5	;RP0=0, select bank0
  1287     0538  1303               	bcf	3,6	;RP1=0, select bank0
  1288     0539  01A0               	clrf	tempo_disp@tempo
  1289     053A  01A1               	clrf	tempo_disp@tempo+1
  1290     053B                     l897:
  1291     053B  3001               	movlw	1
  1292     053C  07A0               	addwf	tempo_disp@tempo,f
  1293     053D  1803               	skipnc
  1294     053E  0AA1               	incf	tempo_disp@tempo+1,f
  1295     053F  3000               	movlw	0
  1296     0540  07A1               	addwf	tempo_disp@tempo+1,f
  1297     0541  300F               	movlw	15
  1298     0542  0221               	subwf	tempo_disp@tempo+1,w
  1299     0543  30FF               	movlw	255
  1300     0544  1903               	skipnz
  1301     0545  0220               	subwf	tempo_disp@tempo,w
  1302     0546  1C03               	skipc
  1303     0547  2D49               	goto	u381
  1304     0548  2D4A               	goto	u380
  1305     0549                     u381:
  1306     0549  2D3B               	goto	l897
  1307     054A                     u380:
  1308     054A                     l34:
  1309     054A  0008               	return
  1310     054B                     __end_of_tempo_disp:
  1311                           
  1312                           	psect	text7
  1313     0594                     __ptext7:	
  1314 ;; *************** function ___awmod *****************
  1315 ;; Defined at:
  1316 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  divisor         2    0[BANK0 ] int 
  1319 ;;  dividend        2    2[BANK0 ] int 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  sign            1    6[BANK0 ] unsigned char 
  1322 ;;  counter         1    5[BANK0 ] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  2    0[BANK0 ] int 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1
  1332 ;;      Params:         0       4       0
  1333 ;;      Locals:         0       2       0
  1334 ;;      Temps:          0       1       0
  1335 ;;      Totals:         0       7       0
  1336 ;;Total ram usage:        7 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345     0594                     ___awmod:	
  1346                           ;psect for function ___awmod
  1347                           
  1348     0594                     l1019:	
  1349                           ;incstack = 0
  1350                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1351                           
  1352     0594  1283               	bcf	3,5	;RP0=0, select bank0
  1353     0595  1303               	bcf	3,6	;RP1=0, select bank0
  1354     0596  01A6               	clrf	___awmod@sign
  1355     0597                     l1021:
  1356     0597  1FA3               	btfss	___awmod@dividend+1,7
  1357     0598  2D9A               	goto	u571
  1358     0599  2D9B               	goto	u570
  1359     059A                     u571:
  1360     059A  2DA2               	goto	l1027
  1361     059B                     u570:
  1362     059B                     l1023:
  1363     059B  09A2               	comf	___awmod@dividend,f
  1364     059C  09A3               	comf	___awmod@dividend+1,f
  1365     059D  0AA2               	incf	___awmod@dividend,f
  1366     059E  1903               	skipnz
  1367     059F  0AA3               	incf	___awmod@dividend+1,f
  1368     05A0                     l1025:
  1369     05A0  01A6               	clrf	___awmod@sign
  1370     05A1  0AA6               	incf	___awmod@sign,f
  1371     05A2                     l1027:
  1372     05A2  1FA1               	btfss	___awmod@divisor+1,7
  1373     05A3  2DA5               	goto	u581
  1374     05A4  2DA6               	goto	u580
  1375     05A5                     u581:
  1376     05A5  2DAB               	goto	l1031
  1377     05A6                     u580:
  1378     05A6                     l1029:
  1379     05A6  09A0               	comf	___awmod@divisor,f
  1380     05A7  09A1               	comf	___awmod@divisor+1,f
  1381     05A8  0AA0               	incf	___awmod@divisor,f
  1382     05A9  1903               	skipnz
  1383     05AA  0AA1               	incf	___awmod@divisor+1,f
  1384     05AB                     l1031:
  1385     05AB  0820               	movf	___awmod@divisor,w
  1386     05AC  0421               	iorwf	___awmod@divisor+1,w
  1387     05AD  1903               	btfsc	3,2
  1388     05AE  2DB0               	goto	u591
  1389     05AF  2DB1               	goto	u590
  1390     05B0                     u591:
  1391     05B0  2DE0               	goto	l1049
  1392     05B1                     u590:
  1393     05B1                     l1033:
  1394     05B1  01A5               	clrf	___awmod@counter
  1395     05B2  0AA5               	incf	___awmod@counter,f
  1396     05B3  2DBF               	goto	l1039
  1397     05B4                     l1035:
  1398     05B4  3001               	movlw	1
  1399     05B5                     u605:
  1400     05B5  1003               	clrc
  1401     05B6  0DA0               	rlf	___awmod@divisor,f
  1402     05B7  0DA1               	rlf	___awmod@divisor+1,f
  1403     05B8  3EFF               	addlw	-1
  1404     05B9  1D03               	skipz
  1405     05BA  2DB5               	goto	u605
  1406     05BB                     l1037:
  1407     05BB  3001               	movlw	1
  1408     05BC  00A4               	movwf	??___awmod
  1409     05BD  0824               	movf	??___awmod,w
  1410     05BE  07A5               	addwf	___awmod@counter,f
  1411     05BF                     l1039:
  1412     05BF  1FA1               	btfss	___awmod@divisor+1,7
  1413     05C0  2DC2               	goto	u611
  1414     05C1  2DC3               	goto	u610
  1415     05C2                     u611:
  1416     05C2  2DB4               	goto	l1035
  1417     05C3                     u610:
  1418     05C3                     l1041:
  1419     05C3  0821               	movf	___awmod@divisor+1,w
  1420     05C4  0223               	subwf	___awmod@dividend+1,w
  1421     05C5  1D03               	skipz
  1422     05C6  2DC9               	goto	u625
  1423     05C7  0820               	movf	___awmod@divisor,w
  1424     05C8  0222               	subwf	___awmod@dividend,w
  1425     05C9                     u625:
  1426     05C9  1C03               	skipc
  1427     05CA  2DCC               	goto	u621
  1428     05CB  2DCD               	goto	u620
  1429     05CC                     u621:
  1430     05CC  2DD3               	goto	l1045
  1431     05CD                     u620:
  1432     05CD                     l1043:
  1433     05CD  0820               	movf	___awmod@divisor,w
  1434     05CE  02A2               	subwf	___awmod@dividend,f
  1435     05CF  0821               	movf	___awmod@divisor+1,w
  1436     05D0  1C03               	skipc
  1437     05D1  03A3               	decf	___awmod@dividend+1,f
  1438     05D2  02A3               	subwf	___awmod@dividend+1,f
  1439     05D3                     l1045:
  1440     05D3  3001               	movlw	1
  1441     05D4                     u635:
  1442     05D4  1003               	clrc
  1443     05D5  0CA1               	rrf	___awmod@divisor+1,f
  1444     05D6  0CA0               	rrf	___awmod@divisor,f
  1445     05D7  3EFF               	addlw	-1
  1446     05D8  1D03               	skipz
  1447     05D9  2DD4               	goto	u635
  1448     05DA                     l1047:
  1449     05DA  3001               	movlw	1
  1450     05DB  02A5               	subwf	___awmod@counter,f
  1451     05DC  1D03               	btfss	3,2
  1452     05DD  2DDF               	goto	u641
  1453     05DE  2DE0               	goto	u640
  1454     05DF                     u641:
  1455     05DF  2DC3               	goto	l1041
  1456     05E0                     u640:
  1457     05E0                     l1049:
  1458     05E0  0826               	movf	___awmod@sign,w
  1459     05E1  1903               	btfsc	3,2
  1460     05E2  2DE4               	goto	u651
  1461     05E3  2DE5               	goto	u650
  1462     05E4                     u651:
  1463     05E4  2DEA               	goto	l1053
  1464     05E5                     u650:
  1465     05E5                     l1051:
  1466     05E5  09A2               	comf	___awmod@dividend,f
  1467     05E6  09A3               	comf	___awmod@dividend+1,f
  1468     05E7  0AA2               	incf	___awmod@dividend,f
  1469     05E8  1903               	skipnz
  1470     05E9  0AA3               	incf	___awmod@dividend+1,f
  1471     05EA                     l1053:
  1472     05EA  0823               	movf	___awmod@dividend+1,w
  1473     05EB  00A1               	movwf	?___awmod+1
  1474     05EC  0822               	movf	___awmod@dividend,w
  1475     05ED  00A0               	movwf	?___awmod
  1476     05EE                     l313:
  1477     05EE  0008               	return
  1478     05EF                     __end_of___awmod:
  1479                           
  1480                           	psect	text8
  1481     05EF                     __ptext8:	
  1482 ;; *************** function ___awdiv *****************
  1483 ;; Defined at:
  1484 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  divisor         2    7[BANK0 ] int 
  1487 ;;  dividend        2    9[BANK0 ] int 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  quotient        2   14[BANK0 ] int 
  1490 ;;  sign            1   13[BANK0 ] unsigned char 
  1491 ;;  counter         1   12[BANK0 ] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2    7[BANK0 ] int 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1
  1501 ;;      Params:         0       4       0
  1502 ;;      Locals:         0       4       0
  1503 ;;      Temps:          0       1       0
  1504 ;;      Totals:         0       9       0
  1505 ;;Total ram usage:        9 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514     05EF                     ___awdiv:	
  1515                           ;psect for function ___awdiv
  1516                           
  1517     05EF                     l975:	
  1518                           ;incstack = 0
  1519                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1520                           
  1521     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1522     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1523     05F1  01AD               	clrf	___awdiv@sign
  1524     05F2                     l977:
  1525     05F2  1FA8               	btfss	___awdiv@divisor+1,7
  1526     05F3  2DF5               	goto	u471
  1527     05F4  2DF6               	goto	u470
  1528     05F5                     u471:
  1529     05F5  2DFD               	goto	l983
  1530     05F6                     u470:
  1531     05F6                     l979:
  1532     05F6  09A7               	comf	___awdiv@divisor,f
  1533     05F7  09A8               	comf	___awdiv@divisor+1,f
  1534     05F8  0AA7               	incf	___awdiv@divisor,f
  1535     05F9  1903               	skipnz
  1536     05FA  0AA8               	incf	___awdiv@divisor+1,f
  1537     05FB                     l981:
  1538     05FB  01AD               	clrf	___awdiv@sign
  1539     05FC  0AAD               	incf	___awdiv@sign,f
  1540     05FD                     l983:
  1541     05FD  1FAA               	btfss	___awdiv@dividend+1,7
  1542     05FE  2E00               	goto	u481
  1543     05FF  2E01               	goto	u480
  1544     0600                     u481:
  1545     0600  2E0A               	goto	l989
  1546     0601                     u480:
  1547     0601                     l985:
  1548     0601  09A9               	comf	___awdiv@dividend,f
  1549     0602  09AA               	comf	___awdiv@dividend+1,f
  1550     0603  0AA9               	incf	___awdiv@dividend,f
  1551     0604  1903               	skipnz
  1552     0605  0AAA               	incf	___awdiv@dividend+1,f
  1553     0606                     l987:
  1554     0606  3001               	movlw	1
  1555     0607  00AB               	movwf	??___awdiv
  1556     0608  082B               	movf	??___awdiv,w
  1557     0609  06AD               	xorwf	___awdiv@sign,f
  1558     060A                     l989:
  1559     060A  01AE               	clrf	___awdiv@quotient
  1560     060B  01AF               	clrf	___awdiv@quotient+1
  1561     060C                     l991:
  1562     060C  0827               	movf	___awdiv@divisor,w
  1563     060D  0428               	iorwf	___awdiv@divisor+1,w
  1564     060E  1903               	btfsc	3,2
  1565     060F  2E11               	goto	u491
  1566     0610  2E12               	goto	u490
  1567     0611                     u491:
  1568     0611  2E49               	goto	l1011
  1569     0612                     u490:
  1570     0612                     l993:
  1571     0612  01AC               	clrf	___awdiv@counter
  1572     0613  0AAC               	incf	___awdiv@counter,f
  1573     0614  2E20               	goto	l999
  1574     0615                     l995:
  1575     0615  3001               	movlw	1
  1576     0616                     u505:
  1577     0616  1003               	clrc
  1578     0617  0DA7               	rlf	___awdiv@divisor,f
  1579     0618  0DA8               	rlf	___awdiv@divisor+1,f
  1580     0619  3EFF               	addlw	-1
  1581     061A  1D03               	skipz
  1582     061B  2E16               	goto	u505
  1583     061C                     l997:
  1584     061C  3001               	movlw	1
  1585     061D  00AB               	movwf	??___awdiv
  1586     061E  082B               	movf	??___awdiv,w
  1587     061F  07AC               	addwf	___awdiv@counter,f
  1588     0620                     l999:
  1589     0620  1FA8               	btfss	___awdiv@divisor+1,7
  1590     0621  2E23               	goto	u511
  1591     0622  2E24               	goto	u510
  1592     0623                     u511:
  1593     0623  2E15               	goto	l995
  1594     0624                     u510:
  1595     0624                     l1001:
  1596     0624  3001               	movlw	1
  1597     0625                     u525:
  1598     0625  1003               	clrc
  1599     0626  0DAE               	rlf	___awdiv@quotient,f
  1600     0627  0DAF               	rlf	___awdiv@quotient+1,f
  1601     0628  3EFF               	addlw	-1
  1602     0629  1D03               	skipz
  1603     062A  2E25               	goto	u525
  1604     062B  0828               	movf	___awdiv@divisor+1,w
  1605     062C  022A               	subwf	___awdiv@dividend+1,w
  1606     062D  1D03               	skipz
  1607     062E  2E31               	goto	u535
  1608     062F  0827               	movf	___awdiv@divisor,w
  1609     0630  0229               	subwf	___awdiv@dividend,w
  1610     0631                     u535:
  1611     0631  1C03               	skipc
  1612     0632  2E34               	goto	u531
  1613     0633  2E35               	goto	u530
  1614     0634                     u531:
  1615     0634  2E3C               	goto	l1007
  1616     0635                     u530:
  1617     0635                     l1003:
  1618     0635  0827               	movf	___awdiv@divisor,w
  1619     0636  02A9               	subwf	___awdiv@dividend,f
  1620     0637  0828               	movf	___awdiv@divisor+1,w
  1621     0638  1C03               	skipc
  1622     0639  03AA               	decf	___awdiv@dividend+1,f
  1623     063A  02AA               	subwf	___awdiv@dividend+1,f
  1624     063B                     l1005:
  1625     063B  142E               	bsf	___awdiv@quotient,0
  1626     063C                     l1007:
  1627     063C  3001               	movlw	1
  1628     063D                     u545:
  1629     063D  1003               	clrc
  1630     063E  0CA8               	rrf	___awdiv@divisor+1,f
  1631     063F  0CA7               	rrf	___awdiv@divisor,f
  1632     0640  3EFF               	addlw	-1
  1633     0641  1D03               	skipz
  1634     0642  2E3D               	goto	u545
  1635     0643                     l1009:
  1636     0643  3001               	movlw	1
  1637     0644  02AC               	subwf	___awdiv@counter,f
  1638     0645  1D03               	btfss	3,2
  1639     0646  2E48               	goto	u551
  1640     0647  2E49               	goto	u550
  1641     0648                     u551:
  1642     0648  2E24               	goto	l1001
  1643     0649                     u550:
  1644     0649                     l1011:
  1645     0649  082D               	movf	___awdiv@sign,w
  1646     064A  1903               	btfsc	3,2
  1647     064B  2E4D               	goto	u561
  1648     064C  2E4E               	goto	u560
  1649     064D                     u561:
  1650     064D  2E53               	goto	l1015
  1651     064E                     u560:
  1652     064E                     l1013:
  1653     064E  09AE               	comf	___awdiv@quotient,f
  1654     064F  09AF               	comf	___awdiv@quotient+1,f
  1655     0650  0AAE               	incf	___awdiv@quotient,f
  1656     0651  1903               	skipnz
  1657     0652  0AAF               	incf	___awdiv@quotient+1,f
  1658     0653                     l1015:
  1659     0653  082F               	movf	___awdiv@quotient+1,w
  1660     0654  00A8               	movwf	?___awdiv+1
  1661     0655  082E               	movf	___awdiv@quotient,w
  1662     0656  00A7               	movwf	?___awdiv
  1663     0657                     l300:
  1664     0657  0008               	return
  1665     0658                     __end_of___awdiv:
  1666     007E                     btemp	set	126	;btemp
  1667     007E                     wtemp0	set	126
  1668                           
  1669                           	psect	idloc
  1670                           
  1671                           ;Config register IDLOC0 @ 0x2000
  1672                           ;	unspecified, using default values
  1673     2000                     	org	8192
  1674     2000  3FFF               	dw	16383
  1675                           
  1676                           ;Config register IDLOC1 @ 0x2001
  1677                           ;	unspecified, using default values
  1678     2001                     	org	8193
  1679     2001  3FFF               	dw	16383
  1680                           
  1681                           ;Config register IDLOC2 @ 0x2002
  1682                           ;	unspecified, using default values
  1683     2002                     	org	8194
  1684     2002  3FFF               	dw	16383
  1685                           
  1686                           ;Config register IDLOC3 @ 0x2003
  1687                           ;	unspecified, using default values
  1688     2003                     	org	8195
  1689     2003  3FFF               	dw	16383
  1690                           
  1691                           	psect	config
  1692                           
  1693                           ;Config register CONFIG @ 0x2007
  1694                           ;	Oscillator Selection bits
  1695                           ;	FOSC = HS, HS oscillator
  1696                           ;	Watchdog Timer Enable bit
  1697                           ;	WDTE = OFF, WDT disabled
  1698                           ;	Power-up Timer Enable bit
  1699                           ;	PWRTE = OFF, PWRT disabled
  1700                           ;	Brown-out Reset Enable bit
  1701                           ;	BOREN = OFF, BOR disabled
  1702                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1703                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1704                           ;	Data EEPROM Memory Code Protection bit
  1705                           ;	CPD = OFF, Data EEPROM code protection off
  1706                           ;	Flash Program Memory Write Enable bits
  1707                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1708                           ;	In-Circuit Debugger Mode bit
  1709                           ;	DEBUG = 0x1, unprogrammed default
  1710                           ;	Flash Program Memory Code Protection bit
  1711                           ;	CP = OFF, Code protection off
  1712     2007                     	org	8199
  1713     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     26      26
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    _posdp->_escrevedp
    _escrevedp->_tempo_disp
    _limpa_disp->_escrevedp_ini
    _ini_display->_escrevedp_ini
    _escrevedp_ini->_tempo_disp
    ___awdiv->___awmod

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2471
                                             16 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                          _escrevedp
                        _ini_display
                         _limpa_disp
                              _posdp
 ---------------------------------------------------------------------------------
 (1) _posdp                                                2     0      2     548
                                              5 BANK0      2     0      2
                          _escrevedp
 ---------------------------------------------------------------------------------
 (2) _escrevedp                                            3     3      0     222
                                              2 BANK0      3     3      0
                         _tempo_disp
 ---------------------------------------------------------------------------------
 (1) _limpa_disp                                           0     0      0     134
                      _escrevedp_ini
 ---------------------------------------------------------------------------------
 (1) _ini_display                                          0     0      0     180
                      _escrevedp_ini
                         _tempo_disp
 ---------------------------------------------------------------------------------
 (2) _escrevedp_ini                                        3     3      0     134
                                              2 BANK0      3     3      0
                         _tempo_disp
 ---------------------------------------------------------------------------------
 (3) _tempo_disp                                           2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _escrevedp
     _tempo_disp
   _ini_display
     _escrevedp_ini
       _tempo_disp
     _tempo_disp
   _limpa_disp
     _escrevedp_ini
   _posdp
     _escrevedp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            5E      0       0       3        0.0%
BANK0               5E     1A      1A       4       27.7%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            5E      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 01 22:03:11 2023

                     l40 075C                       l34 054A                       l43 0527  
                     l28 0593                       l37 06C9                       l46 0536  
           ___awdiv@sign 002D                      l300 0657                      l313 05EE  
                    l901 0715                      l911 0741                      l903 0716  
                    l921 065B                      l913 074E                      l905 0717  
                    l931 06A2                      l923 0696                      l915 0757  
                    l907 071A                      l941 06B1                      l933 06A5  
                    l925 0699                      l917 0758                      l909 072E  
                    l951 06C0                      l943 06B4                      l935 06A8  
                    l927 069C                      l919 0759                      l953 06C3  
                    l945 06B7                      l937 06AB                      l929 069F  
                    l961 0590                      l891 0537                      l955 06C6  
                    l947 06BA                      l939 06AE                      l963 0528  
                    l971 0520                      l981 05FB                      l949 06BD  
                    l957 054B                      l965 052B                      l973 0524  
                    l991 060C                      l983 05FD                      l975 05EF  
                    l959 0554                      l967 0533                      l993 0612  
                    l985 0601                      l977 05F2                      l897 053B  
                    l969 051D                      l995 0615                      l987 0606  
                    l979 05F6                      l899 06CD                      l997 061C  
                    l989 060A                      l999 0620                      u405 06E2  
                    u510 0624                      u511 0623                      u415 06F5  
                    u505 0616                      u425 0707                      u530 0635  
                    u610 05C3                      u531 0634                      u611 05C2  
                    u435 071F                      u620 05CD                      u380 054A  
                    u525 0625                      u621 05CC                      u605 05B5  
                    u381 0549                      u445 0731                      u550 0649  
                    u470 05F6                      u551 0648                      u535 0631  
                    u471 05F5                      u455 065E                      u560 064E  
                    u480 0601                      u640 05E0                      u561 064D  
                    u545 063D                      u481 0600                      u641 05DF  
                    u625 05C9                      u465 0670                      u490 0612  
                    u650 05E5                      u570 059B                      u491 0611  
                    u651 05E4                      u635 05D4                      u571 059A  
                    u395 06D0                      u580 05A6                      u660 0771  
                    u581 05A5                      u661 0770                      u590 05B1  
                    u670 07F2                      u591 05B0                      u671 07F1  
           ___awmod@sign 0026              main@centena 0032                     l1001 0624  
                   l1003 0635                     l1011 0649                     l1013 064E  
                   l1005 063B                     l1021 0597                     l1015 0653  
                   l1007 063C                     l1031 05AB                     l1023 059B  
                   l1009 0643                     l1041 05C3                     l1033 05B1  
                   l1025 05A0                     l1051 05E5                     l1043 05CD  
                   l1035 05B4                     l1027 05A2                     l1019 0594  
                   l1053 05EA                     l1045 05D3                     l1037 05BB  
                   l1029 05A6                     l1061 0763                     l1047 05DA  
                   l1039 05BF                     l1071 07A6                     l1063 0766  
                   l1049 05E0                     l1081 07D0                     l1073 07B7  
                   l1065 0771                     l1057 075D                     l1091 07F4  
                   l1083 07D7                     l1075 07B9                     l1067 0777  
                   l1059 0760                     l1085 07E0                     l1077 07C0  
                   l1069 0788                     l1079 07C7                     l1087 07E7  
                   l1089 07F2                     _main 075D                     btemp 007E  
           ?_ini_display 0020              main@unidade 0030                     start 0000  
           main@contador 0038                    ?_main 0020          __end_of___awdiv 0658  
        __end_of___awmod 05EF          ___awdiv@divisor 0027          ___awdiv@counter 002C  
                  _TRISD 0088                    _posdp 051D                    status 0003  
                  wtemp0 007E            _escrevedp_ini 0658          __initialization 07FD  
           __end_of_main 07FD                   ??_main 0000         ___awdiv@dividend 0029  
                 ?_posdp 0025           ?_escrevedp_ini 0020                ??___awdiv 002B  
              ??___awmod 0024         ___awdiv@quotient 002E          ___awmod@divisor 0020  
        ___awmod@counter 0025  __end_of__initialization 07FD           __pcstackCOMMON 0000  
          __end_of_posdp 0528                  ??_posdp 0000          ??_escrevedp_ini 0022  
             __pmaintext 075D                  ___awdiv 05EF                  ___awmod 0594  
      __end_of_escrevedp 075D                  __ptext1 051D                  __ptext2 06CA  
                __ptext3 0528                  __ptext4 054B                  __ptext5 0658  
                __ptext6 0537                  __ptext7 0594                  __ptext8 05EF  
             _limpa_disp 0528         ___awmod@dividend 0022     end_of_initialization 07FD  
            posdp@ValorP 0025               _tempo_disp 0537                _PORTDbits 0008  
      escrevedp_ini@dado 0024               main@dezena 0034            escrevedp@dado 0024  
            ?_limpa_disp 0020      start_initialization 07FD            ??_ini_display 0000  
            ?_tempo_disp 0020                ___latbits 0001            __pcstackBANK0 0020  
        tempo_disp@tempo 0020    __end_of_escrevedp_ini 06CA      __end_of_ini_display 0594  
               ?___awdiv 0027                 ?___awmod 0020                _escrevedp 06CA  
             ?_escrevedp 0020                main@tempo 0036              _ini_display 054B  
           ??_limpa_disp 0000       __end_of_limpa_disp 0537             ??_tempo_disp 0000  
            ??_escrevedp 0022       __end_of_tempo_disp 054B  



Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 13 20:30:14 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F874A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 17/08/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F874A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172                           
   173                           	psect	idataBANK0
   174     0648                     __pidataBANK0:
   175                           
   176                           ;initializer for displayDigit@F880
   177     0648  343F               	retlw	63
   178     0649  3400               	retlw	0
   179     064A  3406               	retlw	6
   180     064B  3400               	retlw	0
   181     064C  345B               	retlw	91
   182     064D  3400               	retlw	0
   183     064E  344F               	retlw	79
   184     064F  3400               	retlw	0
   185     0650  3466               	retlw	102
   186     0651  3400               	retlw	0
   187     0652  346D               	retlw	109
   188     0653  3400               	retlw	0
   189     0654  347D               	retlw	125
   190     0655  3400               	retlw	0
   191     0656  3407               	retlw	7
   192     0657  3400               	retlw	0
   193     0658  347F               	retlw	127
   194     0659  3400               	retlw	0
   195     065A  346F               	retlw	111
   196     065B  3400               	retlw	0
   197     0008                     _PORTD	set	8
   198     0007                     _PORTC	set	7
   199     0088                     _TRISD	set	136
   200     0087                     _TRISC	set	135
   201                           
   202                           	psect	cinit
   203     07F1                     start_initialization:	
   204                           ; #config settings
   205                           
   206     07F1                     __initialization:
   207                           
   208                           ; Initialize objects allocated to BANK0
   209     07F1  1383               	bcf	3,7	;select IRP bank0
   210     07F2  305A               	movlw	low (__pdataBANK0+20)
   211     07F3  00FD               	movwf	btemp+-1
   212     07F4  3006               	movlw	high __pidataBANK0
   213     07F5  00FE               	movwf	btemp
   214     07F6  3048               	movlw	low __pidataBANK0
   215     07F7  00FF               	movwf	btemp+1
   216     07F8  3046               	movlw	low __pdataBANK0
   217     07F9  0084               	movwf	4
   218     07FA  118A  263B  118A   	fcall	init_ram0
   219     07FD                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222     07FD                     __end_of__initialization:
   223     07FD  0183               	clrf	3
   224     07FE  118A  2F49         	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	dataBANK0
   227     0046                     __pdataBANK0:
   228     0046                     displayDigit@F880:
   229     0046                     	ds	20
   230                           
   231                           	psect	inittext
   232     0637                     init_fetch0:	
   233                           ;	Called with low address in FSR and high address in W
   234                           
   235     0637  087E               	movf	btemp,w
   236     0638  008A               	movwf	10
   237     0639  087F               	movf	btemp+1,w
   238     063A  0082               	movwf	2
   239     063B                     init_ram0:	
   240                           ;Called with:
   241                           ;	high address of idata address in btemp 
   242                           ;	low address of idata address in btemp+1 
   243                           ;	low address of data in FSR
   244                           ;	high address + 1 of data in btemp-1
   245                           
   246     063B  118A  2637  118A   	fcall	init_fetch0
   247     063E  0080               	movwf	0
   248     063F  0A84               	incf	4,f
   249     0640  0804               	movf	4,w
   250     0641  067D               	xorwf	btemp+-1,w
   251     0642  1903               	btfsc	3,2
   252     0643  3400               	retlw	0
   253     0644  0AFF               	incf	btemp+1,f
   254     0645  1903               	btfsc	3,2
   255     0646  0AFE               	incf	btemp,f
   256     0647  2E3B               	goto	init_ram0
   257                           
   258                           	psect	cstackCOMMON
   259     0000                     __pcstackCOMMON:
   260     0000                     ??_main:
   261                           
   262                           	psect	cstackBANK0
   263     0020                     __pcstackBANK0:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0020                     ?_displayDigit:
   267     0020                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270     0020                     ?___awmod:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0020                     displayDigit@digit:	
   274                           ; 2 bytes @ 0x0
   275                           
   276     0020                     ___awmod@divisor:	
   277                           ; 2 bytes @ 0x0
   278                           
   279                           
   280                           ; 2 bytes @ 0x0
   281     0020                     	ds	2
   282     0022                     ??_displayDigit:
   283     0022                     ___awmod@dividend:	
   284                           ; 1 bytes @ 0x2
   285                           
   286                           
   287                           ; 2 bytes @ 0x2
   288     0022                     	ds	2
   289     0024                     ??___awmod:
   290                           
   291                           ; 1 bytes @ 0x4
   292     0024                     	ds	1
   293     0025                     ___awmod@counter:
   294                           
   295                           ; 1 bytes @ 0x5
   296     0025                     	ds	1
   297     0026                     ___awmod@sign:
   298     0026                     displayDigit@segmentData:	
   299                           ; 1 bytes @ 0x6
   300                           
   301                           
   302                           ; 20 bytes @ 0x6
   303     0026                     	ds	1
   304     0027                     ?___awdiv:
   305     0027                     ___awdiv@divisor:	
   306                           ; 2 bytes @ 0x7
   307                           
   308                           
   309                           ; 2 bytes @ 0x7
   310     0027                     	ds	2
   311     0029                     ___awdiv@dividend:
   312                           
   313                           ; 2 bytes @ 0x9
   314     0029                     	ds	2
   315     002B                     ??___awdiv:
   316                           
   317                           ; 1 bytes @ 0xB
   318     002B                     	ds	1
   319     002C                     ___awdiv@counter:
   320                           
   321                           ; 1 bytes @ 0xC
   322     002C                     	ds	1
   323     002D                     ___awdiv@sign:
   324                           
   325                           ; 1 bytes @ 0xD
   326     002D                     	ds	1
   327     002E                     ___awdiv@quotient:
   328                           
   329                           ; 2 bytes @ 0xE
   330     002E                     	ds	12
   331     003A                     main@centena:
   332                           
   333                           ; 2 bytes @ 0x1A
   334     003A                     	ds	2
   335     003C                     main@dezena:
   336                           
   337                           ; 2 bytes @ 0x1C
   338     003C                     	ds	2
   339     003E                     main@unidade:
   340                           
   341                           ; 2 bytes @ 0x1E
   342     003E                     	ds	2
   343     0040                     main@tempo:
   344                           
   345                           ; 4 bytes @ 0x20
   346     0040                     	ds	4
   347     0044                     main@number:
   348                           
   349                           ; 2 bytes @ 0x24
   350     0044                     	ds	2
   351                           
   352                           	psect	maintext
   353     0749                     __pmaintext:	
   354 ;;
   355 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   356 ;;
   357 ;; *************** function _main *****************
   358 ;; Defined at:
   359 ;;		line 42 in file "newmain.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;  unidade         2   30[BANK0 ] int 
   364 ;;  dezena          2   28[BANK0 ] int 
   365 ;;  centena         2   26[BANK0 ] int 
   366 ;;  tempo           4   32[BANK0 ] unsigned long 
   367 ;;  number          2   36[BANK0 ] int 
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : B00/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1
   377 ;;      Params:         0       0       0
   378 ;;      Locals:         0      12       0
   379 ;;      Temps:          0       0       0
   380 ;;      Totals:         0      12       0
   381 ;;Total ram usage:       12 bytes
   382 ;; Hardware stack levels required when called: 1
   383 ;; This function calls:
   384 ;;		___awdiv
   385 ;;		___awmod
   386 ;;		_displayDigit
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392     0749                     _main:	
   393                           ;psect for function _main
   394                           
   395     0749                     l823:	
   396                           ;incstack = 0
   397                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   398                           
   399                           
   400                           ;newmain.c: 44:     TRISC = 0;
   401     0749  1683               	bsf	3,5	;RP0=1, select bank1
   402     074A  1303               	bcf	3,6	;RP1=0, select bank1
   403     074B  0187               	clrf	7	;volatile
   404                           
   405                           ;newmain.c: 45:     TRISD = 0;
   406     074C  0188               	clrf	8	;volatile
   407                           
   408                           ;newmain.c: 47:     int number = 0;
   409     074D  1283               	bcf	3,5	;RP0=0, select bank0
   410     074E  1303               	bcf	3,6	;RP1=0, select bank0
   411     074F  01C4               	clrf	main@number
   412     0750  01C5               	clrf	main@number+1
   413     0751                     l825:
   414                           
   415                           ;newmain.c: 51:         int centena = number / 100;
   416     0751  3064               	movlw	100
   417     0752  00A7               	movwf	___awdiv@divisor
   418     0753  3000               	movlw	0
   419     0754  00A8               	movwf	___awdiv@divisor+1
   420     0755  0845               	movf	main@number+1,w
   421     0756  00AA               	movwf	___awdiv@dividend+1
   422     0757  0844               	movf	main@number,w
   423     0758  00A9               	movwf	___awdiv@dividend
   424     0759  118A  26E0  118A   	fcall	___awdiv
   425     075C  1283               	bcf	3,5	;RP0=0, select bank0
   426     075D  1303               	bcf	3,6	;RP1=0, select bank0
   427     075E  0828               	movf	?___awdiv+1,w
   428     075F  00BB               	movwf	main@centena+1
   429     0760  0827               	movf	?___awdiv,w
   430     0761  00BA               	movwf	main@centena
   431     0762                     l827:
   432                           
   433                           ;newmain.c: 52:         int dezena = (number % 100) / 10;
   434     0762  300A               	movlw	10
   435     0763  00A7               	movwf	___awdiv@divisor
   436     0764  3000               	movlw	0
   437     0765  00A8               	movwf	___awdiv@divisor+1
   438     0766  0845               	movf	main@number+1,w
   439     0767  00A3               	movwf	___awmod@dividend+1
   440     0768  0844               	movf	main@number,w
   441     0769  00A2               	movwf	___awmod@dividend
   442     076A  3064               	movlw	100
   443     076B  00A0               	movwf	___awmod@divisor
   444     076C  3000               	movlw	0
   445     076D  00A1               	movwf	___awmod@divisor+1
   446     076E  118A  2685  118A   	fcall	___awmod
   447     0771  1283               	bcf	3,5	;RP0=0, select bank0
   448     0772  1303               	bcf	3,6	;RP1=0, select bank0
   449     0773  0821               	movf	?___awmod+1,w
   450     0774  00AA               	movwf	___awdiv@dividend+1
   451     0775  0820               	movf	?___awmod,w
   452     0776  00A9               	movwf	___awdiv@dividend
   453     0777  118A  26E0  118A   	fcall	___awdiv
   454     077A  1283               	bcf	3,5	;RP0=0, select bank0
   455     077B  1303               	bcf	3,6	;RP1=0, select bank0
   456     077C  0828               	movf	?___awdiv+1,w
   457     077D  00BD               	movwf	main@dezena+1
   458     077E  0827               	movf	?___awdiv,w
   459     077F  00BC               	movwf	main@dezena
   460     0780                     l829:
   461                           
   462                           ;newmain.c: 53:         int unidade = (number % 10);
   463     0780  300A               	movlw	10
   464     0781  00A0               	movwf	___awmod@divisor
   465     0782  3000               	movlw	0
   466     0783  00A1               	movwf	___awmod@divisor+1
   467     0784  0845               	movf	main@number+1,w
   468     0785  00A3               	movwf	___awmod@dividend+1
   469     0786  0844               	movf	main@number,w
   470     0787  00A2               	movwf	___awmod@dividend
   471     0788  118A  2685  118A   	fcall	___awmod
   472     078B  1283               	bcf	3,5	;RP0=0, select bank0
   473     078C  1303               	bcf	3,6	;RP1=0, select bank0
   474     078D  0821               	movf	?___awmod+1,w
   475     078E  00BF               	movwf	main@unidade+1
   476     078F  0820               	movf	?___awmod,w
   477     0790  00BE               	movwf	main@unidade
   478     0791                     l831:
   479                           
   480                           ;newmain.c: 55:         PORTD = 0x01;
   481     0791  3001               	movlw	1
   482     0792  0088               	movwf	8	;volatile
   483     0793                     l833:
   484                           
   485                           ;newmain.c: 56:         displayDigit(centena);
   486     0793  083B               	movf	main@centena+1,w
   487     0794  00A1               	movwf	displayDigit@digit+1
   488     0795  083A               	movf	main@centena,w
   489     0796  00A0               	movwf	displayDigit@digit
   490     0797  118A  265C  118A   	fcall	_displayDigit
   491     079A                     l835:
   492                           
   493                           ;newmain.c: 57:         PORTD = 0x02;
   494     079A  3002               	movlw	2
   495     079B  1283               	bcf	3,5	;RP0=0, select bank0
   496     079C  1303               	bcf	3,6	;RP1=0, select bank0
   497     079D  0088               	movwf	8	;volatile
   498     079E                     l837:
   499                           
   500                           ;newmain.c: 58:         displayDigit(dezena);
   501     079E  083D               	movf	main@dezena+1,w
   502     079F  00A1               	movwf	displayDigit@digit+1
   503     07A0  083C               	movf	main@dezena,w
   504     07A1  00A0               	movwf	displayDigit@digit
   505     07A2  118A  265C  118A   	fcall	_displayDigit
   506     07A5                     l839:
   507                           
   508                           ;newmain.c: 59:         PORTD = 0x04;
   509     07A5  3004               	movlw	4
   510     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   511     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   512     07A8  0088               	movwf	8	;volatile
   513     07A9                     l841:
   514                           
   515                           ;newmain.c: 60:         displayDigit(unidade);
   516     07A9  083F               	movf	main@unidade+1,w
   517     07AA  00A1               	movwf	displayDigit@digit+1
   518     07AB  083E               	movf	main@unidade,w
   519     07AC  00A0               	movwf	displayDigit@digit
   520     07AD  118A  265C  118A   	fcall	_displayDigit
   521     07B0                     l843:
   522                           
   523                           ;newmain.c: 62:         tempo++;
   524     07B0  3001               	movlw	1
   525     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   526     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   527     07B3  07C0               	addwf	main@tempo,f
   528     07B4  3000               	movlw	0
   529     07B5  1803               	skipnc
   530     07B6  3001               	movlw	1
   531     07B7  07C1               	addwf	main@tempo+1,f
   532     07B8  3000               	movlw	0
   533     07B9  1803               	skipnc
   534     07BA  3001               	movlw	1
   535     07BB  07C2               	addwf	main@tempo+2,f
   536     07BC  3000               	movlw	0
   537     07BD  1803               	skipnc
   538     07BE  3001               	movlw	1
   539     07BF  07C3               	addwf	main@tempo+3,f
   540     07C0                     l845:
   541                           
   542                           ;newmain.c: 63:         if (tempo>0x70)
   543     07C0  0843               	movf	main@tempo+3,w
   544     07C1  1D03               	btfss	3,2
   545     07C2  2FD1               	goto	u430
   546     07C3  0842               	movf	main@tempo+2,w
   547     07C4  1D03               	btfss	3,2
   548     07C5  2FD1               	goto	u430
   549     07C6  0841               	movf	main@tempo+1,w
   550     07C7  1D03               	btfss	3,2
   551     07C8  2FD1               	goto	u430
   552     07C9  3071               	movlw	113
   553     07CA  0240               	subwf	main@tempo,w
   554     07CB  1D03               	skipz
   555     07CC  2FCD               	goto	u433
   556     07CD                     u433:
   557     07CD  1C03               	btfss	3,0
   558     07CE  2FD0               	goto	u431
   559     07CF  2FD1               	goto	u430
   560     07D0                     u431:
   561     07D0  2FE1               	goto	l849
   562     07D1                     u430:
   563     07D1                     l847:
   564                           
   565                           ;newmain.c: 64:         {;newmain.c: 65:             number++;
   566     07D1  3001               	movlw	1
   567     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   568     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   569     07D4  07C4               	addwf	main@number,f
   570     07D5  1803               	skipnc
   571     07D6  0AC5               	incf	main@number+1,f
   572     07D7  3000               	movlw	0
   573     07D8  07C5               	addwf	main@number+1,f
   574                           
   575                           ;newmain.c: 66:             tempo=0;
   576     07D9  3000               	movlw	0
   577     07DA  00C3               	movwf	main@tempo+3
   578     07DB  3000               	movlw	0
   579     07DC  00C2               	movwf	main@tempo+2
   580     07DD  3000               	movlw	0
   581     07DE  00C1               	movwf	main@tempo+1
   582     07DF  3000               	movlw	0
   583     07E0  00C0               	movwf	main@tempo
   584     07E1                     l849:
   585                           
   586                           ;newmain.c: 69:         if(number==999) {
   587     07E1  30E7               	movlw	231
   588     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   589     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   590     07E4  0644               	xorwf	main@number,w
   591     07E5  3003               	movlw	3
   592     07E6  1903               	skipnz
   593     07E7  0645               	xorwf	main@number+1,w
   594     07E8  1D03               	btfss	3,2
   595     07E9  2FEB               	goto	u441
   596     07EA  2FEC               	goto	u440
   597     07EB                     u441:
   598     07EB  2F51               	goto	l825
   599     07EC                     u440:
   600     07EC                     l851:
   601                           
   602                           ;newmain.c: 70:             number=0;
   603     07EC  01C4               	clrf	main@number
   604     07ED  01C5               	clrf	main@number+1
   605     07EE  2F51               	goto	l825
   606     07EF  118A  2800         	ljmp	start
   607     07F1                     __end_of_main:
   608                           
   609                           	psect	text1
   610     065C                     __ptext1:	
   611 ;; *************** function _displayDigit *****************
   612 ;; Defined at:
   613 ;;		line 23 in file "newmain.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  digit           2    0[BANK0 ] int 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  segmentData    20    6[BANK0 ] int [10]
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1
   627 ;;      Params:         0       2       0
   628 ;;      Locals:         0      20       0
   629 ;;      Temps:          0       4       0
   630 ;;      Totals:         0      26       0
   631 ;;Total ram usage:       26 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640     065C                     _displayDigit:	
   641                           ;psect for function _displayDigit
   642                           
   643     065C                     l735:	
   644                           ;incstack = 0
   645                           ; Regs used in _displayDigit: [wreg-fsr0h+status,2+status,0]
   646                           
   647                           
   648                           ;newmain.c: 24:     int segmentData[] = {
   649     065C  3026               	movlw	displayDigit@segmentData& (0+255)
   650     065D  0084               	movwf	4
   651     065E  3046               	movlw	low displayDigit@F880
   652     065F  1283               	bcf	3,5	;RP0=0, select bank0
   653     0660  1303               	bcf	3,6	;RP1=0, select bank0
   654     0661  00A2               	movwf	??_displayDigit
   655     0662  0804               	movf	4,w
   656     0663  00A3               	movwf	??_displayDigit+1
   657     0664  3014               	movlw	20
   658     0665  00A4               	movwf	??_displayDigit+2
   659     0666                     u230:
   660     0666  0822               	movf	??_displayDigit,w
   661     0667  0084               	movwf	4
   662     0668  1383               	bcf	3,7	;select IRP bank0
   663     0669  0800               	movf	0,w
   664     066A  00A5               	movwf	??_displayDigit+3
   665     066B  0AA2               	incf	??_displayDigit,f
   666     066C  0823               	movf	??_displayDigit+1,w
   667     066D  0084               	movwf	4
   668     066E  0825               	movf	??_displayDigit+3,w
   669     066F  0080               	movwf	0
   670     0670  0AA3               	incf	??_displayDigit+1,f
   671     0671  0BA4               	decfsz	??_displayDigit+2,f
   672     0672  2E66               	goto	u230
   673     0673                     l737:
   674                           
   675                           ;newmain.c: 37:     PORTC = segmentData[digit];
   676     0673  0820               	movf	displayDigit@digit,w
   677     0674  00A2               	movwf	??_displayDigit
   678     0675  0722               	addwf	??_displayDigit,w
   679     0676  3E26               	addlw	(low (displayDigit@segmentData| 0))& (0+255)
   680     0677  0084               	movwf	4
   681     0678  0800               	movf	0,w
   682     0679  0087               	movwf	7	;volatile
   683     067A                     l739:
   684                           
   685                           ;newmain.c: 39:     _delay((unsigned long)((5)*(20000000/4000.0)));
   686     067A  3021               	movlw	33
   687     067B  1283               	bcf	3,5	;RP0=0, select bank0
   688     067C  1303               	bcf	3,6	;RP1=0, select bank0
   689     067D  00A3               	movwf	??_displayDigit+1
   690     067E  3076               	movlw	118
   691     067F  00A2               	movwf	??_displayDigit
   692     0680                     u457:
   693     0680  0BA2               	decfsz	??_displayDigit,f
   694     0681  2E80               	goto	u457
   695     0682  0BA3               	decfsz	??_displayDigit+1,f
   696     0683  2E80               	goto	u457
   697     0684                     l15:
   698     0684  0008               	return
   699     0685                     __end_of_displayDigit:
   700                           
   701                           	psect	text2
   702     0685                     __ptext2:	
   703 ;; *************** function ___awmod *****************
   704 ;; Defined at:
   705 ;;		line 5 in file "/Applications/microchip/xc8/v2.41/pic/sources/c90/common/awmod.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  divisor         2    0[BANK0 ] int 
   708 ;;  dividend        2    2[BANK0 ] int 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  sign            1    6[BANK0 ] unsigned char 
   711 ;;  counter         1    5[BANK0 ] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  2    0[BANK0 ] int 
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1
   721 ;;      Params:         0       4       0
   722 ;;      Locals:         0       2       0
   723 ;;      Temps:          0       1       0
   724 ;;      Totals:         0       7       0
   725 ;;Total ram usage:        7 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734     0685                     ___awmod:	
   735                           ;psect for function ___awmod
   736                           
   737     0685                     l785:	
   738                           ;incstack = 0
   739                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   740                           
   741     0685  1283               	bcf	3,5	;RP0=0, select bank0
   742     0686  1303               	bcf	3,6	;RP1=0, select bank0
   743     0687  01A6               	clrf	___awmod@sign
   744     0688                     l787:
   745     0688  1FA3               	btfss	___awmod@dividend+1,7
   746     0689  2E8B               	goto	u341
   747     068A  2E8C               	goto	u340
   748     068B                     u341:
   749     068B  2E93               	goto	l793
   750     068C                     u340:
   751     068C                     l789:
   752     068C  09A2               	comf	___awmod@dividend,f
   753     068D  09A3               	comf	___awmod@dividend+1,f
   754     068E  0AA2               	incf	___awmod@dividend,f
   755     068F  1903               	skipnz
   756     0690  0AA3               	incf	___awmod@dividend+1,f
   757     0691                     l791:
   758     0691  01A6               	clrf	___awmod@sign
   759     0692  0AA6               	incf	___awmod@sign,f
   760     0693                     l793:
   761     0693  1FA1               	btfss	___awmod@divisor+1,7
   762     0694  2E96               	goto	u351
   763     0695  2E97               	goto	u350
   764     0696                     u351:
   765     0696  2E9C               	goto	l797
   766     0697                     u350:
   767     0697                     l795:
   768     0697  09A0               	comf	___awmod@divisor,f
   769     0698  09A1               	comf	___awmod@divisor+1,f
   770     0699  0AA0               	incf	___awmod@divisor,f
   771     069A  1903               	skipnz
   772     069B  0AA1               	incf	___awmod@divisor+1,f
   773     069C                     l797:
   774     069C  0820               	movf	___awmod@divisor,w
   775     069D  0421               	iorwf	___awmod@divisor+1,w
   776     069E  1903               	btfsc	3,2
   777     069F  2EA1               	goto	u361
   778     06A0  2EA2               	goto	u360
   779     06A1                     u361:
   780     06A1  2ED1               	goto	l815
   781     06A2                     u360:
   782     06A2                     l799:
   783     06A2  01A5               	clrf	___awmod@counter
   784     06A3  0AA5               	incf	___awmod@counter,f
   785     06A4  2EB0               	goto	l805
   786     06A5                     l801:
   787     06A5  3001               	movlw	1
   788     06A6                     u375:
   789     06A6  1003               	clrc
   790     06A7  0DA0               	rlf	___awmod@divisor,f
   791     06A8  0DA1               	rlf	___awmod@divisor+1,f
   792     06A9  3EFF               	addlw	-1
   793     06AA  1D03               	skipz
   794     06AB  2EA6               	goto	u375
   795     06AC                     l803:
   796     06AC  3001               	movlw	1
   797     06AD  00A4               	movwf	??___awmod
   798     06AE  0824               	movf	??___awmod,w
   799     06AF  07A5               	addwf	___awmod@counter,f
   800     06B0                     l805:
   801     06B0  1FA1               	btfss	___awmod@divisor+1,7
   802     06B1  2EB3               	goto	u381
   803     06B2  2EB4               	goto	u380
   804     06B3                     u381:
   805     06B3  2EA5               	goto	l801
   806     06B4                     u380:
   807     06B4                     l807:
   808     06B4  0821               	movf	___awmod@divisor+1,w
   809     06B5  0223               	subwf	___awmod@dividend+1,w
   810     06B6  1D03               	skipz
   811     06B7  2EBA               	goto	u395
   812     06B8  0820               	movf	___awmod@divisor,w
   813     06B9  0222               	subwf	___awmod@dividend,w
   814     06BA                     u395:
   815     06BA  1C03               	skipc
   816     06BB  2EBD               	goto	u391
   817     06BC  2EBE               	goto	u390
   818     06BD                     u391:
   819     06BD  2EC4               	goto	l811
   820     06BE                     u390:
   821     06BE                     l809:
   822     06BE  0820               	movf	___awmod@divisor,w
   823     06BF  02A2               	subwf	___awmod@dividend,f
   824     06C0  0821               	movf	___awmod@divisor+1,w
   825     06C1  1C03               	skipc
   826     06C2  03A3               	decf	___awmod@dividend+1,f
   827     06C3  02A3               	subwf	___awmod@dividend+1,f
   828     06C4                     l811:
   829     06C4  3001               	movlw	1
   830     06C5                     u405:
   831     06C5  1003               	clrc
   832     06C6  0CA1               	rrf	___awmod@divisor+1,f
   833     06C7  0CA0               	rrf	___awmod@divisor,f
   834     06C8  3EFF               	addlw	-1
   835     06C9  1D03               	skipz
   836     06CA  2EC5               	goto	u405
   837     06CB                     l813:
   838     06CB  3001               	movlw	1
   839     06CC  02A5               	subwf	___awmod@counter,f
   840     06CD  1D03               	btfss	3,2
   841     06CE  2ED0               	goto	u411
   842     06CF  2ED1               	goto	u410
   843     06D0                     u411:
   844     06D0  2EB4               	goto	l807
   845     06D1                     u410:
   846     06D1                     l815:
   847     06D1  0826               	movf	___awmod@sign,w
   848     06D2  1903               	btfsc	3,2
   849     06D3  2ED5               	goto	u421
   850     06D4  2ED6               	goto	u420
   851     06D5                     u421:
   852     06D5  2EDB               	goto	l819
   853     06D6                     u420:
   854     06D6                     l817:
   855     06D6  09A2               	comf	___awmod@dividend,f
   856     06D7  09A3               	comf	___awmod@dividend+1,f
   857     06D8  0AA2               	incf	___awmod@dividend,f
   858     06D9  1903               	skipnz
   859     06DA  0AA3               	incf	___awmod@dividend+1,f
   860     06DB                     l819:
   861     06DB  0823               	movf	___awmod@dividend+1,w
   862     06DC  00A1               	movwf	?___awmod+1
   863     06DD  0822               	movf	___awmod@dividend,w
   864     06DE  00A0               	movwf	?___awmod
   865     06DF                     l277:
   866     06DF  0008               	return
   867     06E0                     __end_of___awmod:
   868                           
   869                           	psect	text3
   870     06E0                     __ptext3:	
   871 ;; *************** function ___awdiv *****************
   872 ;; Defined at:
   873 ;;		line 5 in file "/Applications/microchip/xc8/v2.41/pic/sources/c90/common/awdiv.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  divisor         2    7[BANK0 ] int 
   876 ;;  dividend        2    9[BANK0 ] int 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  quotient        2   14[BANK0 ] int 
   879 ;;  sign            1   13[BANK0 ] unsigned char 
   880 ;;  counter         1   12[BANK0 ] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  2    7[BANK0 ] int 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1
   890 ;;      Params:         0       4       0
   891 ;;      Locals:         0       4       0
   892 ;;      Temps:          0       1       0
   893 ;;      Totals:         0       9       0
   894 ;;Total ram usage:        9 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903     06E0                     ___awdiv:	
   904                           ;psect for function ___awdiv
   905                           
   906     06E0                     l741:	
   907                           ;incstack = 0
   908                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   909                           
   910     06E0  1283               	bcf	3,5	;RP0=0, select bank0
   911     06E1  1303               	bcf	3,6	;RP1=0, select bank0
   912     06E2  01AD               	clrf	___awdiv@sign
   913     06E3                     l743:
   914     06E3  1FA8               	btfss	___awdiv@divisor+1,7
   915     06E4  2EE6               	goto	u241
   916     06E5  2EE7               	goto	u240
   917     06E6                     u241:
   918     06E6  2EEE               	goto	l749
   919     06E7                     u240:
   920     06E7                     l745:
   921     06E7  09A7               	comf	___awdiv@divisor,f
   922     06E8  09A8               	comf	___awdiv@divisor+1,f
   923     06E9  0AA7               	incf	___awdiv@divisor,f
   924     06EA  1903               	skipnz
   925     06EB  0AA8               	incf	___awdiv@divisor+1,f
   926     06EC                     l747:
   927     06EC  01AD               	clrf	___awdiv@sign
   928     06ED  0AAD               	incf	___awdiv@sign,f
   929     06EE                     l749:
   930     06EE  1FAA               	btfss	___awdiv@dividend+1,7
   931     06EF  2EF1               	goto	u251
   932     06F0  2EF2               	goto	u250
   933     06F1                     u251:
   934     06F1  2EFB               	goto	l755
   935     06F2                     u250:
   936     06F2                     l751:
   937     06F2  09A9               	comf	___awdiv@dividend,f
   938     06F3  09AA               	comf	___awdiv@dividend+1,f
   939     06F4  0AA9               	incf	___awdiv@dividend,f
   940     06F5  1903               	skipnz
   941     06F6  0AAA               	incf	___awdiv@dividend+1,f
   942     06F7                     l753:
   943     06F7  3001               	movlw	1
   944     06F8  00AB               	movwf	??___awdiv
   945     06F9  082B               	movf	??___awdiv,w
   946     06FA  06AD               	xorwf	___awdiv@sign,f
   947     06FB                     l755:
   948     06FB  01AE               	clrf	___awdiv@quotient
   949     06FC  01AF               	clrf	___awdiv@quotient+1
   950     06FD                     l757:
   951     06FD  0827               	movf	___awdiv@divisor,w
   952     06FE  0428               	iorwf	___awdiv@divisor+1,w
   953     06FF  1903               	btfsc	3,2
   954     0700  2F02               	goto	u261
   955     0701  2F03               	goto	u260
   956     0702                     u261:
   957     0702  2F3A               	goto	l777
   958     0703                     u260:
   959     0703                     l759:
   960     0703  01AC               	clrf	___awdiv@counter
   961     0704  0AAC               	incf	___awdiv@counter,f
   962     0705  2F11               	goto	l765
   963     0706                     l761:
   964     0706  3001               	movlw	1
   965     0707                     u275:
   966     0707  1003               	clrc
   967     0708  0DA7               	rlf	___awdiv@divisor,f
   968     0709  0DA8               	rlf	___awdiv@divisor+1,f
   969     070A  3EFF               	addlw	-1
   970     070B  1D03               	skipz
   971     070C  2F07               	goto	u275
   972     070D                     l763:
   973     070D  3001               	movlw	1
   974     070E  00AB               	movwf	??___awdiv
   975     070F  082B               	movf	??___awdiv,w
   976     0710  07AC               	addwf	___awdiv@counter,f
   977     0711                     l765:
   978     0711  1FA8               	btfss	___awdiv@divisor+1,7
   979     0712  2F14               	goto	u281
   980     0713  2F15               	goto	u280
   981     0714                     u281:
   982     0714  2F06               	goto	l761
   983     0715                     u280:
   984     0715                     l767:
   985     0715  3001               	movlw	1
   986     0716                     u295:
   987     0716  1003               	clrc
   988     0717  0DAE               	rlf	___awdiv@quotient,f
   989     0718  0DAF               	rlf	___awdiv@quotient+1,f
   990     0719  3EFF               	addlw	-1
   991     071A  1D03               	skipz
   992     071B  2F16               	goto	u295
   993     071C  0828               	movf	___awdiv@divisor+1,w
   994     071D  022A               	subwf	___awdiv@dividend+1,w
   995     071E  1D03               	skipz
   996     071F  2F22               	goto	u305
   997     0720  0827               	movf	___awdiv@divisor,w
   998     0721  0229               	subwf	___awdiv@dividend,w
   999     0722                     u305:
  1000     0722  1C03               	skipc
  1001     0723  2F25               	goto	u301
  1002     0724  2F26               	goto	u300
  1003     0725                     u301:
  1004     0725  2F2D               	goto	l773
  1005     0726                     u300:
  1006     0726                     l769:
  1007     0726  0827               	movf	___awdiv@divisor,w
  1008     0727  02A9               	subwf	___awdiv@dividend,f
  1009     0728  0828               	movf	___awdiv@divisor+1,w
  1010     0729  1C03               	skipc
  1011     072A  03AA               	decf	___awdiv@dividend+1,f
  1012     072B  02AA               	subwf	___awdiv@dividend+1,f
  1013     072C                     l771:
  1014     072C  142E               	bsf	___awdiv@quotient,0
  1015     072D                     l773:
  1016     072D  3001               	movlw	1
  1017     072E                     u315:
  1018     072E  1003               	clrc
  1019     072F  0CA8               	rrf	___awdiv@divisor+1,f
  1020     0730  0CA7               	rrf	___awdiv@divisor,f
  1021     0731  3EFF               	addlw	-1
  1022     0732  1D03               	skipz
  1023     0733  2F2E               	goto	u315
  1024     0734                     l775:
  1025     0734  3001               	movlw	1
  1026     0735  02AC               	subwf	___awdiv@counter,f
  1027     0736  1D03               	btfss	3,2
  1028     0737  2F39               	goto	u321
  1029     0738  2F3A               	goto	u320
  1030     0739                     u321:
  1031     0739  2F15               	goto	l767
  1032     073A                     u320:
  1033     073A                     l777:
  1034     073A  082D               	movf	___awdiv@sign,w
  1035     073B  1903               	btfsc	3,2
  1036     073C  2F3E               	goto	u331
  1037     073D  2F3F               	goto	u330
  1038     073E                     u331:
  1039     073E  2F44               	goto	l781
  1040     073F                     u330:
  1041     073F                     l779:
  1042     073F  09AE               	comf	___awdiv@quotient,f
  1043     0740  09AF               	comf	___awdiv@quotient+1,f
  1044     0741  0AAE               	incf	___awdiv@quotient,f
  1045     0742  1903               	skipnz
  1046     0743  0AAF               	incf	___awdiv@quotient+1,f
  1047     0744                     l781:
  1048     0744  082F               	movf	___awdiv@quotient+1,w
  1049     0745  00A8               	movwf	?___awdiv+1
  1050     0746  082E               	movf	___awdiv@quotient,w
  1051     0747  00A7               	movwf	?___awdiv
  1052     0748                     l264:
  1053     0748  0008               	return
  1054     0749                     __end_of___awdiv:
  1055     007E                     btemp	set	126	;btemp
  1056     007E                     wtemp0	set	126
  1057                           
  1058                           	psect	idloc
  1059                           
  1060                           ;Config register IDLOC0 @ 0x2000
  1061                           ;	unspecified, using default values
  1062     2000                     	org	8192
  1063     2000  3FFF               	dw	16383
  1064                           
  1065                           ;Config register IDLOC1 @ 0x2001
  1066                           ;	unspecified, using default values
  1067     2001                     	org	8193
  1068     2001  3FFF               	dw	16383
  1069                           
  1070                           ;Config register IDLOC2 @ 0x2002
  1071                           ;	unspecified, using default values
  1072     2002                     	org	8194
  1073     2002  3FFF               	dw	16383
  1074                           
  1075                           ;Config register IDLOC3 @ 0x2003
  1076                           ;	unspecified, using default values
  1077     2003                     	org	8195
  1078     2003  3FFF               	dw	16383
  1079                           
  1080                           	psect	config
  1081                           
  1082                           ;Config register CONFIG @ 0x2007
  1083                           ;	Oscillator Selection bits
  1084                           ;	FOSC = HS, HS oscillator
  1085                           ;	Watchdog Timer Enable bit
  1086                           ;	WDTE = OFF, WDT disabled
  1087                           ;	Power-up Timer Enable bit
  1088                           ;	PWRTE = OFF, PWRT disabled
  1089                           ;	Brown-out Reset Enable bit
  1090                           ;	BOREN = OFF, BOR disabled
  1091                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1092                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1093                           ;	Data EEPROM Memory Code Protection bit
  1094                           ;	CPD = OFF, Data EEPROM code protection off
  1095                           ;	Flash Program Memory Write Enable bits
  1096                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1097                           ;	In-Circuit Debugger Mode bit
  1098                           ;	DEBUG = 0x1, unprogrammed default
  1099                           ;	Flash Program Memory Code Protection bit
  1100                           ;	CP = OFF, Code protection off
  1101     2007                     	org	8199
  1102     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     38      58
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_displayDigit
    ___awdiv->___awmod

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    1662
                                             26 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                       _displayDigit
 ---------------------------------------------------------------------------------
 (1) _displayDigit                                        26    24      2     274
                                              0 BANK0     26    24      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _displayDigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0       0       6        0.0%
BITBANK1            5E      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     26      3A       4       61.7%
BITBANK0            5E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A       8        0.0%
ABS                  0      0      3A       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 13 20:30:14 2023

                      pc 0002                       l15 0684             ___awdiv@sign 002D  
                     fsr 0004            ?_displayDigit 0020                      l264 0748  
                    l277 06DF                      l801 06A5                      l811 06C4  
                    l803 06AC                      l741 06E0                      l813 06CB  
                    l805 06B0                      l751 06F2                      l743 06E3  
                    l807 06B4                      l815 06D1                      l735 065C  
                    l831 0791                      l823 0749                      l761 0706  
                    l753 06F7                      l745 06E7                      l817 06D6  
                    l809 06BE                      l737 0673                      l841 07A9  
                    l833 0793                      l825 0751                      l771 072C  
                    l763 070D                      l755 06FB                      l747 06EC  
                    l819 06DB                      l739 067A                      l851 07EC  
                    l843 07B0                      l835 079A                      l827 0762  
                    l781 0744                      l773 072D                      l765 0711  
                    l757 06FD                      l749 06EE                      l845 07C0  
                    l837 079E                      l829 0780                      l775 0734  
                    l767 0715                      l759 0703                      l791 0691  
                    l847 07D1                      l839 07A5                      l769 0726  
                    l777 073A                      l793 0693                      l785 0685  
                    l849 07E1                      l779 073F                      l795 0697  
                    l787 0688                      l797 069C                      l789 068C  
                    l799 06A2                      u300 0726                      u301 0725  
                    u230 0666                      u320 073A                      u240 06E7  
                    u321 0739                      u305 0722                      u241 06E6  
                    u330 073F                      u250 06F2                      u410 06D1  
                    u331 073E                      u315 072E                      u251 06F1  
                    u411 06D0                      u260 0703                      u420 06D6  
                    u340 068C                      u261 0702                      u421 06D5  
                    u405 06C5                      u341 068B                      u350 0697  
                    u430 07D1                      u351 0696                      u431 07D0  
                    u280 0715                      u360 06A2                      u440 07EC  
                    u281 0714                      u361 06A1                      u441 07EB  
                    u433 07CD                      u275 0707                      u380 06B4  
                    u381 06B3                      u390 06BE                      u295 0716  
                    u391 06BD                      u375 06A6                      u457 0680  
                    u395 06BA                      fsr0 0004                      indf 0000  
           ___awmod@sign 0026              main@centena 003A                     _main 0749  
                   btemp 007E              main@unidade 003E                     start 0000  
         ??_displayDigit 0022                    ?_main 0020          __end_of___awdiv 0749  
        __end_of___awmod 06E0          ___awdiv@divisor 0027          ___awdiv@counter 002C  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07F1             __end_of_main 07F1  
                 ??_main 0000         ___awdiv@dividend 0029                ??___awdiv 002B  
              ??___awmod 0024         ___awdiv@quotient 002E          ___awmod@divisor 0020  
        ___awmod@counter 0025     __end_of_displayDigit 0685  __end_of__initialization 07FD  
      displayDigit@digit 0020           __pcstackCOMMON 0000             __pidataBANK0 0648  
             __pmaintext 0749  displayDigit@segmentData 0026                  ___awdiv 06E0  
                ___awmod 0685                  __ptext1 065C                  __ptext2 0685  
                __ptext3 06E0         ___awmod@dividend 0022     end_of_initialization 07FD  
           _displayDigit 065C               main@dezena 003C               main@number 0044  
    start_initialization 07F1               init_fetch0 0637              __pdataBANK0 0046  
       displayDigit@F880 0046                ___latbits 0001            __pcstackBANK0 0020  
               ?___awdiv 0027                 ?___awmod 0020                main@tempo 0040  
               init_ram0 063B  
